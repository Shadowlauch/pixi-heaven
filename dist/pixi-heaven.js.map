{"version":3,"file":"pixi-heaven.js","sourceRoot":"","sources":["../src/settings.ts","../src/utils.ts","../src/xporter.ts","../src/a_spine/Spine.ts","../src/animation/AnimationState.ts","../src/polygonPacking/Spritesheet.ts","../src/twotint/BitmapText.ts","../src/twotint/ColorTransform.ts","../src/twotint/mesh/Mesh.ts","../src/twotint/mesh/MeshMaterial.ts","../src/twotint/sprites/HeavenBatchRenderer.ts","../src/twotint/sprites/LoopShaderGenerator.ts","../src/twotint/sprites/MaskedBatchRenderer.ts","../src/twotint/sprites/Sprite.ts","../src/twotint/sprites/convert.ts","../src/z_spine/Spine.ts"],"names":[],"mappings":"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","sourcesContent":["namespace pixi_heaven {\r\n\texport enum CLAMP_OPTIONS {\r\n\t\tNEVER = 0,\r\n\t\tAUTO = 1,\r\n\t\tALWAYS = 2\r\n\t}\r\n\r\n\texport let settings = {\r\n\t\tMESH_CLAMP: CLAMP_OPTIONS.AUTO,\r\n\t\tBLEND_ADD_UNITY: false,\r\n\t}\r\n}\r\n","namespace pixi_heaven.utils {\r\n\texport function createIndicesForQuads(size: number) {\r\n\t\t// the total number of indices in our array, there are 6 points per quad.\r\n\r\n\t\tconst totalIndices = size * 6;\r\n\r\n\t\tconst indices = new Uint16Array(totalIndices);\r\n\r\n\t\t// fill the indices with the quads to draw\r\n\t\tfor (let i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\r\n\t\t\tindices[i + 0] = j + 0;\r\n\t\t\tindices[i + 1] = j + 1;\r\n\t\t\tindices[i + 2] = j + 2;\r\n\t\t\tindices[i + 3] = j + 0;\r\n\t\t\tindices[i + 4] = j + 2;\r\n\t\t\tindices[i + 5] = j + 3;\r\n\t\t}\r\n\r\n\t\treturn indices;\r\n\t}\r\n\r\n\t//bit twiddle is here\r\n\r\n\texport function isPow2(v: number): boolean {\r\n\t\treturn !(v & (v - 1)) && (!!v);\r\n\t}\r\n\r\n\texport function nextPow2(v: number): number {\r\n\t\tv += +(v === 0);\r\n\t\t--v;\r\n\t\tv |= v >>> 1;\r\n\t\tv |= v >>> 2;\r\n\t\tv |= v >>> 4;\r\n\t\tv |= v >>> 8;\r\n\t\tv |= v >>> 16;\r\n\t\treturn v + 1;\r\n\t}\r\n\r\n\texport function log2(v: number) {\r\n\t\tlet r: number, shift: number;\r\n\t\tr = +(v > 0xFFFF) << 4;\r\n\t\tv >>>= r;\r\n\t\tshift = +(v > 0xFF  ) << 3;\r\n\t\tv >>>= shift;\r\n\t\tr |= shift;\r\n\t\tshift = +(v > 0xF   ) << 2;\r\n\t\tv >>>= shift;\r\n\t\tr |= shift;\r\n\t\tshift = +(v > 0x3   ) << 1;\r\n\t\tv >>>= shift;\r\n\t\tr |= shift;\r\n\t\treturn r | (v >> 1);\r\n\t}\r\n}\r\n","///<reference types=\"pixi.js\"/>\r\nnamespace pixi_heaven {\r\n    (PIXI as any).heaven = pixi_heaven;\r\n}\r\n","namespace pixi_heaven {\r\n    if (!(PIXI as any).spine) {\r\n        (PIXI as any).spine = {\r\n            Spine: function () {}\r\n        }\r\n    }\r\n}\r\n","namespace pixi_heaven {\r\n\texport interface IFrameObject {\r\n\t\ttexture: PIXI.Texture;\r\n\t\ttime: number;\r\n\t}\r\n\r\n\texport interface ITextureAnimationTarget {\r\n\t\ttexture: PIXI.Texture;\r\n\t\tanimState: AnimationState;\r\n\t}\r\n\r\n\texport class AnimationState {\r\n\t\ttexture: PIXI.Texture;\r\n\r\n\t\t_textures: Array<PIXI.Texture> = null;\r\n\t\t_durations: Array<number> = null;\r\n\t\t_autoUpdate: boolean;\r\n\t\tanimationSpeed: number = 1;\r\n\t\t_target: ITextureAnimationTarget;\r\n\t\tloop = true;\r\n\t\tonComplete: Function = null;\r\n\t\tonFrameChange: Function = null;\r\n\t\tonLoop: Function = null;\r\n\t\t_currentTime: number = 0;\r\n\t\tplaying: boolean = false;\r\n\r\n\t\tconstructor(textures: Array<PIXI.Texture> | Array<IFrameObject>, autoUpdate?: boolean) {\r\n\t\t\tthis.texture = textures[0] instanceof PIXI.Texture ? textures[0] as PIXI.Texture : (textures[0] as IFrameObject).texture;\r\n\r\n\t\t\tthis.textures = textures as Array<PIXI.Texture>;\r\n\r\n\t\t\tthis._autoUpdate = autoUpdate !== false;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops the AnimatedSprite\r\n\t\t *\r\n\t\t */\r\n\t\tstop() {\r\n\t\t\tif (!this.playing) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.playing = false;\r\n\t\t\tif (this._autoUpdate) {\r\n\t\t\t\tPIXI.Ticker.shared.remove(this.update, this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Plays the AnimatedSprite\r\n\t\t *\r\n\t\t */\r\n\t\tplay() {\r\n\t\t\tif (this.playing) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.playing = true;\r\n\t\t\tif (this._autoUpdate) {\r\n\t\t\t\tPIXI.Ticker.shared.add(this.update, this, PIXI.UPDATE_PRIORITY.HIGH);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops the AnimatedSprite and goes to a specific frame\r\n\t\t *\r\n\t\t * @param {number} frameNumber - frame index to stop at\r\n\t\t */\r\n\t\tgotoAndStop(frameNumber: number) {\r\n\t\t\tthis.stop();\r\n\r\n\t\t\tconst previousFrame = this.currentFrame;\r\n\r\n\t\t\tthis._currentTime = frameNumber;\r\n\r\n\t\t\tif (previousFrame !== this.currentFrame) {\r\n\t\t\t\tthis.updateTexture();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Goes to a specific frame and begins playing the AnimatedSprite\r\n\t\t *\r\n\t\t * @param {number} frameNumber - frame index to start at\r\n\t\t */\r\n\t\tgotoAndPlay(frameNumber: number) {\r\n\t\t\tconst previousFrame = this.currentFrame;\r\n\r\n\t\t\tthis._currentTime = frameNumber;\r\n\r\n\t\t\tif (previousFrame !== this.currentFrame) {\r\n\t\t\t\tthis.updateTexture();\r\n\t\t\t}\r\n\r\n\t\t\tthis.play();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Updates the object transform for rendering.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @param {number} deltaTime - Time since last tick.\r\n\t\t */\r\n\t\tupdate(deltaTime: number) {\r\n\t\t\tconst elapsed = this.animationSpeed * deltaTime;\r\n\t\t\tconst previousFrame = this.currentFrame;\r\n\r\n\t\t\tif (this._durations !== null) {\r\n\t\t\t\tlet lag = this._currentTime % 1 * this._durations[this.currentFrame];\r\n\r\n\t\t\t\tlag += elapsed / 60 * 1000;\r\n\r\n\t\t\t\twhile (lag < 0) {\r\n\t\t\t\t\tthis._currentTime--;\r\n\t\t\t\t\tlag += this._durations[this.currentFrame];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet sign = this.animationSpeed * deltaTime;\r\n\r\n\t\t\t\tif (sign < 0) sign = -1;\r\n\t\t\t\telse if (sign > 0) sign = 1;\r\n\r\n\t\t\t\tthis._currentTime = Math.floor(this._currentTime);\r\n\r\n\t\t\t\twhile (lag >= this._durations[this.currentFrame]) {\r\n\t\t\t\t\tlag -= this._durations[this.currentFrame] * sign;\r\n\t\t\t\t\tthis._currentTime += sign;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._currentTime += lag / this._durations[this.currentFrame];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._currentTime += elapsed;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._currentTime < 0 && !this.loop) {\r\n\t\t\t\tthis.gotoAndStop(0);\r\n\r\n\t\t\t\tif (this.onComplete) {\r\n\t\t\t\t\tthis.onComplete();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this._currentTime >= this._textures.length && !this.loop) {\r\n\t\t\t\tthis.gotoAndStop(this._textures.length - 1);\r\n\r\n\t\t\t\tif (this.onComplete) {\r\n\t\t\t\t\tthis.onComplete();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (previousFrame !== this.currentFrame) {\r\n\t\t\t\tif (this.loop && this.onLoop) {\r\n\t\t\t\t\tif (this.animationSpeed > 0 && this.currentFrame < previousFrame) {\r\n\t\t\t\t\t\tthis.onLoop();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (this.animationSpeed < 0 && this.currentFrame > previousFrame) {\r\n\t\t\t\t\t\tthis.onLoop();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.updateTexture();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Updates the displayed texture to match the current frame index\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\tupdateTexture() {\r\n\t\t\tthis.texture = this._textures[this.currentFrame];\r\n\t\t\tif (this._target) {\r\n\t\t\t\tthis._target.texture = this.texture;\r\n\t\t\t}\r\n\t\t\tif (this.onFrameChange) {\r\n\t\t\t\tthis.onFrameChange(this.currentFrame);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbind(target: ITextureAnimationTarget) {\r\n\t\t\tthis._target = target;\r\n\t\t\ttarget.animState = this;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * A short hand way of creating a movieclip from an array of frame ids\r\n\t\t *\r\n\t\t * @static\r\n\t\t * @param {string[]} frames - The array of frames ids the movieclip will use as its texture frames\r\n\t\t * @return {AnimatedSprite} The new animated sprite with the specified frames.\r\n\t\t */\r\n\t\tstatic fromFrames(frames: Array<string>) {\r\n\t\t\tconst textures = [];\r\n\r\n\t\t\tfor (let i = 0; i < frames.length; ++i) {\r\n\t\t\t\ttextures.push(PIXI.Texture.from(frames[i]));\r\n\t\t\t}\r\n\r\n\t\t\treturn new AnimationState(textures);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * A short hand way of creating a movieclip from an array of image ids\r\n\t\t *\r\n\t\t * @static\r\n\t\t * @param {string[]} images - the array of image urls the movieclip will use as its texture frames\r\n\t\t * @return {AnimatedSprite} The new animate sprite with the specified images as frames.\r\n\t\t */\r\n\t\tstatic fromImages(images: Array<string>) {\r\n\t\t\tconst textures = [];\r\n\r\n\t\t\tfor (let i = 0; i < images.length; ++i) {\r\n\t\t\t\ttextures.push(PIXI.Texture.from(images[i]));\r\n\t\t\t}\r\n\r\n\t\t\treturn new AnimationState(textures);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * totalFrames is the total number of frames in the AnimatedSprite. This is the same as number of textures\r\n\t\t * assigned to the AnimatedSprite.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tget totalFrames() {\r\n\t\t\treturn this._textures.length;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The array of textures used for this AnimatedSprite\r\n\t\t *\r\n\t\t * @member {PIXI.Texture[]}\r\n\t\t */\r\n\t\tget textures() {\r\n\t\t\treturn this._textures;\r\n\t\t}\r\n\r\n\t\tset textures(value) {\r\n\t\t\tif (value[0] instanceof PIXI.Texture) {\r\n\t\t\t\tthis._textures = value;\r\n\t\t\t\tthis._durations = null;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._textures = [];\r\n\t\t\t\tthis._durations = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\t\tconst val = (value as any)[i];\r\n\t\t\t\t\tthis._textures.push(val.texture);\r\n\t\t\t\t\tthis._durations.push(val.time);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.gotoAndStop(0);\r\n\t\t\tthis.updateTexture();\r\n\t\t}\r\n\r\n\t\tget currentFrame()\r\n\t\t{\r\n\t\t\tlet currentFrame = Math.floor(this._currentTime) % this._textures.length;\r\n\r\n\t\t\tif (currentFrame < 0)\r\n\t\t\t{\r\n\t\t\t\tcurrentFrame += this._textures.length;\r\n\t\t\t}\r\n\r\n\t\t\treturn currentFrame;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven {\r\n\texport class TexturePolygon {\r\n\t\tconstructor(public vertices: ArrayLike<number>, public uvs: ArrayLike<number>, public indices: ArrayLike<number>) {\r\n\t\t}\r\n\t}\r\n\r\n\t(PIXI.Spritesheet.prototype as any)._processFrames = function (initialFrameIndex: number) {\r\n\t\tconst meta = this.data.meta;\r\n\r\n\t\tlet frameIndex = initialFrameIndex;\r\n\t\tconst maxFrames = PIXI.Spritesheet.BATCH_SIZE;\r\n\r\n\t\twhile (frameIndex - initialFrameIndex < maxFrames && frameIndex < this._frameKeys.length)\r\n\t\t{\r\n\t\t\tconst i = this._frameKeys[frameIndex];\r\n\t\t\tconst data = this._frames[i];\r\n\t\t\tconst rect = data.frame;\r\n\r\n\t\t\tif (rect)\r\n\t\t\t{\r\n\t\t\t\tlet frame = null;\r\n\t\t\t\tlet trim = null;\r\n\t\t\t\tconst sourceSize = data.trimmed !== false && data.sourceSize\r\n\t\t\t\t\t? data.sourceSize : data.frame;\r\n\r\n\t\t\t\tconst orig = new PIXI.Rectangle(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tMath.floor(sourceSize.w) / this.resolution,\r\n\t\t\t\t\tMath.floor(sourceSize.h) / this.resolution\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (data.rotated)\r\n\t\t\t\t{\r\n\t\t\t\t\tframe = new PIXI.Rectangle(\r\n\t\t\t\t\t\tMath.floor(rect.x) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.y) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.h) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.w) / this.resolution\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tframe = new PIXI.Rectangle(\r\n\t\t\t\t\t\tMath.floor(rect.x) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.y) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.w) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.h) / this.resolution\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//  Check to see if the sprite is trimmed\r\n\t\t\t\tif (data.trimmed !== false && data.spriteSourceSize)\r\n\t\t\t\t{\r\n\t\t\t\t\ttrim = new PIXI.Rectangle(\r\n\t\t\t\t\t\tMath.floor(data.spriteSourceSize.x) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(data.spriteSourceSize.y) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.w) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.h) / this.resolution\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.textures[i] = new PIXI.Texture(\r\n\t\t\t\t\tthis.baseTexture,\r\n\t\t\t\t\tframe,\r\n\t\t\t\t\torig,\r\n\t\t\t\t\ttrim,\r\n\t\t\t\t\tdata.rotated ? 2 : 0,\r\n\t\t\t\t\tdata.anchor\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (data.vertices) {\r\n\t\t\t\t\tconst vertices = new Float32Array(data.vertices.length * 2);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < data.vertices.length; i++) {\r\n\t\t\t\t\t\tvertices[i * 2] = Math.floor(data.vertices[i][0] ) / this.resolution;\r\n\t\t\t\t\t\tvertices[i * 2 + 1] = Math.floor(data.vertices[i][1] ) / this.resolution;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst uvs = new Float32Array(data.verticesUV.length * 2);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < data.verticesUV.length; i++) {\r\n\t\t\t\t\t\tuvs[i * 2] = data.verticesUV[i][0] / meta.size.w;\r\n\t\t\t\t\t\tuvs[i * 2 + 1] = data.verticesUV[i][1] / meta.size.h;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst indices = new Uint16Array(data.triangles.length * 3);\r\n\t\t\t\t\tfor (let i = 0; i < data.triangles.length; i++) {\r\n\t\t\t\t\t\tindices[i * 3] = data.triangles[i][0];\r\n\t\t\t\t\t\tindices[i * 3 + 1] = data.triangles[i][1];\r\n\t\t\t\t\t\tindices[i * 3 + 2] = data.triangles[i][2];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t(this.textures[i] as any).polygon = new TexturePolygon(vertices, uvs, indices);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// lets also add the frame to pixi's global cache for 'from' and 'fromLoader' functions\r\n\t\t\t\tPIXI.Texture.addToCache(this.textures[i], i);\r\n\t\t\t}\r\n\r\n\t\t\tframeIndex++;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven {\r\n\texport class BitmapText extends PIXI.BitmapText {\r\n\t\tconstructor(text: string, style?: any) {\r\n\t\t\tsuper(text, style);\r\n\t\t\tif (!this.color) {\r\n\t\t\t\tthis.color = new ColorTransform();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcolor: ColorTransform;\r\n\r\n\t\tget tint() {\r\n\t\t\treturn this.color ? this.color.tintBGR : 0xffffff;\r\n\t\t}\r\n\r\n\t\tset tint(value: number) {\r\n\t\t\tthis.color && (this.color.tintBGR = value);\r\n\t\t}\r\n\r\n\t\taddChild(...additionalChildren: PIXI.DisplayObject[]): any {\r\n\t\t\tconst child: Sprite = additionalChildren[0] as any;\r\n\t\t\tif (!child.color && (child as any).vertexData) {\r\n\t\t\t\tif (!this.color) {\r\n\t\t\t\t\tthis.color = new ColorTransform();\r\n\t\t\t\t}\r\n\t\t\t\tchild.color = this.color;\r\n\t\t\t\tchild.pluginName = 'batchHeaven';\r\n\t\t\t}\r\n\t\t\treturn super.addChild(child, ...additionalChildren);\r\n\t\t}\r\n\r\n\t\t_render(renderer: PIXI.Renderer) {\r\n\t\t\tthis.color.alpha = this.worldAlpha;\r\n\t\t\tthis.color.updateTransform();\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven {\r\n\tconst whiteRgba = [1.0, 1.0, 1.0, 1.0];\r\n\tconst blackRgba = [0.0, 0.0, 0.0, 1.0];\r\n\r\n\texport class ColorTransform {\r\n\t\tdark = new Float32Array(blackRgba);\r\n\t\tlight = new Float32Array(whiteRgba);\r\n\r\n\t\t_updateID = 0;\r\n\t\t_currentUpdateID = -1;\r\n\r\n\t\tdarkRgba: number = 0;\r\n\t\tlightRgba: number = -1;\r\n\t\thasNoTint: boolean = true;\r\n\r\n\t\tget darkR() {\r\n\t\t\treturn this.dark[0];\r\n\t\t}\r\n\r\n\t\tset darkR(value: number) {\r\n\t\t\tif (this.dark[0] === value) return;\r\n\t\t\tthis.dark[0] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget darkG() {\r\n\t\t\treturn this.dark[1];\r\n\t\t}\r\n\r\n\t\tset darkG(value: number) {\r\n\t\t\tif (this.dark[1] === value) return;\r\n\t\t\tthis.dark[1] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget darkB() {\r\n\t\t\treturn this.dark[2];\r\n\t\t}\r\n\r\n\t\tset darkB(value: number) {\r\n\t\t\tif (this.dark[2] === value) return;\r\n\t\t\tthis.dark[2] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget lightR() {\r\n\t\t\treturn this.light[0];\r\n\t\t}\r\n\r\n\t\tset lightR(value: number) {\r\n\t\t\tif (this.light[0] === value) return;\r\n\t\t\tthis.light[0] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget lightG() {\r\n\t\t\treturn this.light[1];\r\n\t\t}\r\n\r\n\t\tset lightG(value: number) {\r\n\t\t\tif (this.light[1] === value) return;\r\n\t\t\tthis.light[1] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget lightB() {\r\n\t\t\treturn this.light[2];\r\n\t\t}\r\n\r\n\t\tset lightB(value: number) {\r\n\t\t\tif (this.light[2] === value) return;\r\n\t\t\tthis.light[2] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget alpha() {\r\n\t\t\treturn this.light[3];\r\n\t\t}\r\n\r\n\t\tset alpha(value: number) {\r\n\t\t\tif (this.light[3] === value) return;\r\n\t\t\tthis.light[3] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget pma() {\r\n\t\t\treturn this.dark[3] !== 0.0;\r\n\t\t}\r\n\r\n\t\tset pma(value: boolean) {\r\n\t\t\tif ((this.dark[3] !== 0.0) !== value) return;\r\n\t\t\tthis.dark[3] = value ? 1.0 : 0.0;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget tintBGR() {\r\n\t\t\tconst light = this.light;\r\n\t\t\treturn ((light[0] * 255) << 16) + ((light[1] * 255) << 8) + (light[2] * 255 | 0);\r\n\t\t}\r\n\r\n\t\tset tintBGR(value: number) {\r\n\t\t\tthis.setLight(\r\n\t\t\t\t((value >> 16) & 0xff) / 255.0,\r\n\t\t\t\t((value >> 8) & 0xff) / 255.0,\r\n\t\t\t\t(value & 0xff) / 255.0\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tsetLight(R: number, G: number, B: number) {\r\n\t\t\tconst color = this.light;\r\n\r\n\t\t\tif (color[0] === R && color[1] === G && color[2] === B) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcolor[0] = R;\r\n\t\t\tcolor[1] = G;\r\n\t\t\tcolor[2] = B;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tsetDark(R: number, G: number, B: number) {\r\n\t\t\tconst color = this.dark;\r\n\r\n\t\t\tif (color[0] === R && color[1] === G && color[2] === B) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcolor[0] = R;\r\n\t\t\tcolor[1] = G;\r\n\t\t\tcolor[2] = B;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tclear() {\r\n\t\t\tthis.dark[0] = 0.0;\r\n\t\t\tthis.dark[1] = 0.0;\r\n\t\t\tthis.dark[2] = 0.0;\r\n\t\t\tthis.light[0] = 1.0;\r\n\t\t\tthis.light[1] = 1.0;\r\n\t\t\tthis.light[2] = 1.0;\r\n\t\t}\r\n\r\n\t\tinvalidate() {\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tupdateTransformLocal() {\r\n\t\t\tconst dark = this.dark, light = this.light;\r\n\t\t\tconst la = 255 * (1.0 + (light[3] - 1.0) * dark[3]);\r\n\t\t\tthis.hasNoTint = dark[0] === 0.0 && dark[1] === 0.0 && dark[2] === 0.0\r\n\t\t\t\t&& light[0] === 1.0 && light[1] === 1.0 && light[2] === 1.0;\r\n\t\t\tthis.darkRgba = (dark[0] * la | 0) + ((dark[1] * la) << 8)\r\n\t\t\t\t+ ((dark[2] * la) << 16) + ((dark[3] * 255) << 24);\r\n\t\t\tthis.lightRgba = (light[0] * la | 0) + ((light[1] * la) << 8)\r\n\t\t\t\t+ ((light[2] * la) << 16) + ((light[3] * 255) << 24);\r\n\t\t\tthis._currentUpdateID = this._updateID;\r\n\t\t}\r\n\r\n\t\tupdateTransform() {\r\n\t\t\tif (this._currentUpdateID === this._updateID) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.updateTransformLocal();\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven {\r\n\texport class Mesh extends PIXI.Mesh {\r\n\t\tcolor: ColorTransform = null;\r\n\t\tmaskSprite: PIXI.Sprite = null;\r\n\t\tuseSpriteMask = false;\r\n\r\n\t\tconstructor(geometry: PIXI.Geometry, shader: MeshMaterial, state: PIXI.State, drawMode?: number) {\r\n\t\t\tsuper(geometry, shader, state, drawMode);\r\n\t\t\tthis.color = shader.color;\r\n\t\t}\r\n\r\n\t\t_renderDefault(renderer: PIXI.Renderer) {\r\n\t\t\tconst shader = this.shader as MeshMaterial;\r\n\r\n\t\t\tshader.color.alpha = this.worldAlpha;\r\n\t\t\tif (shader.update) {\r\n\t\t\t\tshader.update();\r\n\t\t\t}\r\n\r\n\t\t\trenderer.batch.flush();\r\n\r\n\t\t\tif ((shader as any).program.uniformData.translationMatrix) {\r\n\t\t\t\tshader.uniforms.translationMatrix = this.worldTransform.toArray(true);\r\n\t\t\t}\r\n\r\n\t\t\t// bind and sync uniforms..\r\n\t\t\trenderer.shader.bind(shader, false);\r\n\r\n\t\t\t// set state..\r\n\t\t\trenderer.state.set(this.state);\r\n\r\n\t\t\t// bind the geometry...\r\n\t\t\trenderer.geometry.bind(this.geometry, shader);\r\n\r\n\t\t\t// then render it\r\n\t\t\trenderer.geometry.draw(this.drawMode, this.size, this.start, (this.geometry as any).instanceCount);\r\n\t\t}\r\n\r\n\t\t_render(renderer: PIXI.Renderer) {\r\n\t\t\t// part of SimpleMesh\r\n\t\t\tif (this.maskSprite) {\r\n\t\t\t\tthis.useSpriteMask = true;\r\n\t\t\t}\r\n\t\t\tif (this.useSpriteMask) {\r\n\t\t\t\t(this.material as any).pluginName = 'batchMasked';\r\n\t\t\t\tthis._renderToBatch(renderer);\r\n\t\t\t} else {\r\n\t\t\t\tsuper._renderDefault(renderer);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_renderToBatch(renderer: PIXI.Renderer)\r\n\t\t{\r\n\t\t\tthis.color.updateTransform();\r\n\t\t\tsuper._renderToBatch(renderer);\r\n\t\t}\r\n\t}\r\n\r\n\r\n\texport class SimpleMesh extends Mesh {\r\n\t\tconstructor(texture: PIXI.Texture, vertices?: Float32Array, uvs?: Float32Array,\r\n\t\t            indices?: Uint16Array, drawMode?: number) {\r\n\t\t\tsuper(new PIXI.MeshGeometry(vertices, uvs, indices),\r\n\t\t\t\tnew MeshMaterial(texture),\r\n\t\t\t\tnull,\r\n\t\t\t\tdrawMode);\r\n\r\n\t\t\t(this.geometry.getBuffer('aVertexPosition') as any).static = false;\r\n\t\t}\r\n\r\n\t\tautoUpdate = true;\r\n\r\n\t\tget vertices() {\r\n\t\t\treturn this.geometry.getBuffer('aVertexPosition').data as Float32Array;\r\n\t\t}\r\n\r\n\t\tset vertices(value) {\r\n\t\t\tthis.geometry.getBuffer('aVertexPosition').data = value;\r\n\t\t}\r\n\r\n\t\t_render(renderer: PIXI.Renderer) {\r\n\t\t\tif (this.autoUpdate) {\r\n\t\t\t\tthis.geometry.getBuffer('aVertexPosition').update();\r\n\t\t\t}\r\n\r\n\t\t\t(super._render as any)(renderer);\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven {\r\n\tconst vertex = `attribute vec2 aVertexPosition;\r\n\tattribute vec2 aTextureCoord;\r\n\r\n\tuniform mat3 projectionMatrix;\r\n\tuniform mat3 translationMatrix;\r\n\tuniform mat3 uTextureMatrix;\r\n\r\n\tvarying vec2 vTextureCoord;\r\n\r\n\tvoid main(void)\r\n\t{\r\n\t\tgl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n\r\n\t\tvTextureCoord = (uTextureMatrix * vec3(aTextureCoord, 1.0)).xy;\r\n\t}`;\r\n\r\n\tconst fragment = `varying vec2 vTextureCoord;\r\nuniform vec4 uLight, uDark;\r\n\r\nuniform sampler2D uSampler;\r\n\r\nvoid main(void)\r\n{\r\n    vec4 texColor = texture2D(uSampler, vTextureCoord);\r\n    gl_FragColor.a = texColor.a * uLight.a;\r\n\tgl_FragColor.rgb = ((texColor.a - 1.0) * uDark.a + 1.0 - texColor.rgb) * uDark.rgb + texColor.rgb * uLight.rgb;\r\n}\r\n\t`;\r\n\r\n\tconst fragTrim = `\r\n\tvarying vec2 vTextureCoord;\r\n\tuniform vec4 uLight, uDark;\r\n\tuniform vec4 uClampFrame;\r\n\t\r\n\tuniform sampler2D uSampler;\r\n\t\r\n\tvoid main(void)\r\n\t{\r\n\t    vec2 coord = vTextureCoord;\r\n\t    if (coord.x < uClampFrame.x || coord.x > uClampFrame.z\r\n\t        || coord.y < uClampFrame.y || coord.y > uClampFrame.w)\r\n\t            discard;\r\n\t    vec4 texColor = texture2D(uSampler, vTextureCoord);\r\n\t    gl_FragColor.a = texColor.a * uLight.a;\r\n\t\tgl_FragColor.rgb = ((texColor.a - 1.0) * uDark.a + 1.0 - texColor.rgb) * uDark.rgb + texColor.rgb * uLight.rgb;\r\n\t}\r\n\t`;\r\n\r\n\texport class MeshMaterial extends PIXI.Shader {\r\n\t\tuvMatrix: PIXI.TextureMatrix;\r\n\t\tbatchable: boolean;\r\n\t\treadonly allowTrim: boolean;\r\n\t\tpluginName: string;\r\n\t\tcolor: ColorTransform;\r\n\r\n\t\tconstructor(uSampler: PIXI.Texture, options?: any) {\r\n\t\t\tconst uniforms = {\r\n\t\t\t\tuSampler,\r\n\t\t\t\tuTextureMatrix: PIXI.Matrix.IDENTITY,\r\n\t\t\t\tuColor: new Float32Array([1, 1, 1, 1]),\r\n\t\t\t};\r\n\r\n\t\t\t// Set defaults\r\n\t\t\toptions = (Object as any).assign({\r\n\t\t\t\tpluginName: 'batchHeaven',\r\n\t\t\t}, options);\r\n\r\n\t\t\tlet allowTrim = options.allowTrim;\r\n\r\n\t\t\tif (!allowTrim) {\r\n\t\t\t\tif (settings.MESH_CLAMP === CLAMP_OPTIONS.AUTO) {\r\n\t\t\t\t\tallowTrim = uSampler.trim && (uSampler.trim.width < uSampler.orig.width || uSampler.trim.height < uSampler.orig.height);\r\n\t\t\t\t} else if (settings.MESH_CLAMP === CLAMP_OPTIONS.ALWAYS) {\r\n\t\t\t\t\tallowTrim = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (options.uniforms) {\r\n\t\t\t\t(Object as any).assign(uniforms, options.uniforms);\r\n\t\t\t}\r\n\r\n\t\t\tsuper(options.program || PIXI.Program.from(vertex, allowTrim ? fragTrim: fragment), uniforms);\r\n\r\n\t\t\tthis.allowTrim = allowTrim;\r\n\r\n\t\t\t/**\r\n\t\t\t * TextureMatrix instance for this Mesh, used to track Texture changes\r\n\t\t\t *\r\n\t\t\t * @member {PIXI.TextureMatrix}\r\n\t\t\t * @readonly\r\n\t\t\t */\r\n\t\t\tthis.uvMatrix = new PIXI.TextureMatrix(uSampler);\r\n\r\n\t\t\t/**\r\n\t\t\t * `true` if shader can be batch with the renderer's batch system.\r\n\t\t\t * @member {boolean}\r\n\t\t\t * @default true\r\n\t\t\t */\r\n\t\t\tthis.batchable = options.program === undefined && !this.allowTrim;\r\n\r\n\t\t\t/**\r\n\t\t\t * Renderer plugin for batching\r\n\t\t\t *\r\n\t\t\t * @member {string}\r\n\t\t\t * @default 'batch'\r\n\t\t\t */\r\n\t\t\tthis.pluginName = options.pluginName;\r\n\r\n\t\t\tthis.color = options.color || new ColorTransform();\r\n\t\t\tthis.uniforms.uDark = this.color.dark;\r\n\t\t\tthis.uniforms.uLight = this.color.light;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Reference to the texture being rendered.\r\n\t\t * @member {PIXI.Texture}\r\n\t\t */\r\n\t\tget texture() {\r\n\t\t\treturn this.uniforms.uSampler;\r\n\t\t}\r\n\r\n\t\tset texture(value) {\r\n\t\t\tif (this.uniforms.uSampler !== value) {\r\n\t\t\t\tthis.uniforms.uSampler = value;\r\n\t\t\t\tthis.uvMatrix.texture = value;\r\n\t\t\t\tthis.color.pma = value.baseTexture.premultiplyAlpha;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * This gets automatically set by the object using this.\r\n\t\t *\r\n\t\t * @default 1\r\n\t\t * @member {number}\r\n\t\t */\r\n\t\tset alpha(value) {\r\n\t\t\tthis.color.alpha = value;\r\n\t\t}\r\n\r\n\t\tget alpha() {\r\n\t\t\treturn this.color.alpha;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Multiply tint for the material.\r\n\t\t * @member {number}\r\n\t\t * @default 0xFFFFFF\r\n\t\t */\r\n\t\tset tint(value) {\r\n\t\t\tthis.color.tintBGR = value;\r\n\t\t}\r\n\r\n\t\tget tint() {\r\n\t\t\treturn this.color.tintBGR;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Gets called automatically by the Mesh. Intended to be overridden for custom\r\n\t\t * MeshMaterial objects.\r\n\t\t */\r\n\t\tupdate() {\r\n\t\t\tthis.color.updateTransform();\r\n\t\t\tif (this.uvMatrix.update()) {\r\n\t\t\t\tthis.uniforms.uTextureMatrix = this.uvMatrix.mapCoord;\r\n\t\t\t\tif (this.allowTrim) {\r\n\t\t\t\t\tthis.uniforms.uClampFrame = this.uvMatrix.uClampFrame;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven.webgl {\r\n\timport TYPES = PIXI.TYPES;\r\n\timport premultiplyTint = PIXI.utils.premultiplyTint;\r\n\timport premultiplyBlendMode = PIXI.utils.premultiplyBlendMode;\r\n\timport BLEND_MODES = PIXI.BLEND_MODES;\r\n\r\n\tconst shaderVert =\r\n`precision highp float;\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute vec4 aLight, aDark;\r\nattribute float aTextureId;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 translationMatrix;\r\nuniform vec4 tint;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vLight, vDark;\r\nvarying float vTextureId;\r\n\r\nvoid main(void){\r\ngl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n\r\nvTextureCoord = aTextureCoord;\r\nvTextureId = aTextureId;\r\nvLight = aLight * tint;\r\nvDark = vec4(aDark.rgb * tint.rgb, aDark.a);\r\n}\r\n`;\r\n\tconst shaderFrag = `\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vLight, vDark;\r\nvarying float vTextureId;\r\nuniform sampler2D uSamplers[%count%];\r\n\r\nvoid main(void) {\r\nvec4 color;\r\nfloat textureId = floor(vTextureId+0.5);\r\n%forloop%\r\ngl_FragColor.a = color.a * vLight.a;\r\ngl_FragColor.rgb = ((color.a - 1.0) * vDark.a + 1.0 - color.rgb) * vDark.rgb + color.rgb * vLight.rgb;\r\n}`;\r\n\r\n\texport class DarkLightGeometry extends PIXI.Geometry\r\n\t{\r\n\t\t_buffer: PIXI.Buffer;\r\n\t\t_indexBuffer : PIXI.Buffer;\r\n\r\n\t\tconstructor(_static = false)\r\n\t\t{\r\n\t\t\tsuper();\r\n\r\n\t\t\tthis._buffer = new PIXI.Buffer(null, _static, false);\r\n\r\n\t\t\tthis._indexBuffer = new PIXI.Buffer(null, _static, true);\r\n\r\n\t\t\tthis.addAttribute('aVertexPosition', this._buffer, 2, false, TYPES.FLOAT)\r\n\t\t\t\t.addAttribute('aTextureCoord', this._buffer, 2, false, TYPES.FLOAT)\r\n\t\t\t\t.addAttribute('aLight', this._buffer, 4, true, TYPES.UNSIGNED_BYTE)\r\n\t\t\t\t.addAttribute('aDark', this._buffer, 4, true, TYPES.UNSIGNED_BYTE)\r\n\t\t\t\t.addAttribute('aTextureId', this._buffer, 1, true, TYPES.FLOAT)\r\n\t\t\t\t.addIndex(this._indexBuffer);\r\n\t\t}\r\n\t}\r\n\r\n\texport class DarkLightPluginFactory {\r\n\t\tstatic create(options: any): any\r\n\t\t{\r\n\t\t\tconst { vertex, fragment, vertexSize, geometryClass } = (Object as any).assign({\r\n\t\t\t\tvertex: shaderVert,\r\n\t\t\t\tfragment: shaderFrag,\r\n\t\t\t\tgeometryClass: DarkLightGeometry,\r\n\t\t\t\tvertexSize: 7,\r\n\t\t\t}, options);\r\n\r\n\t\t\treturn class BatchPlugin extends PIXI.AbstractBatchRenderer\r\n\t\t\t{\r\n\t\t\t\tconstructor(renderer: PIXI.Renderer)\r\n\t\t\t\t{\r\n\t\t\t\t\tsuper(renderer);\r\n\r\n\t\t\t\t\tthis.shaderGenerator = new PIXI.BatchShaderGenerator(vertex, fragment);\r\n\t\t\t\t\tthis.geometryClass = geometryClass;\r\n\t\t\t\t\tthis.vertexSize = vertexSize;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvertexSize: number;\r\n\r\n\t\t\t\tpackInterleavedGeometry(element: any, attributeBuffer: PIXI.ViewableBuffer, indexBuffer: Uint16Array, aIndex: number, iIndex: number) {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tuint32View,\r\n\t\t\t\t\t\tfloat32View,\r\n\t\t\t\t\t} = attributeBuffer;\r\n\r\n\t\t\t\t\tlet lightRgba = -1;\r\n\t\t\t\t\tlet darkRgba = 0;\r\n\r\n\t\t\t\t\tif (element.color) {\r\n\t\t\t\t\t\tlightRgba = element.color.lightRgba;\r\n\t\t\t\t\t\tdarkRgba = element.color.darkRgba;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst alpha = Math.min(element.worldAlpha, 1.0);\r\n\t\t\t\t\t\tlightRgba = (alpha < 1.0\r\n\t\t\t\t\t\t\t&& element._texture.baseTexture.premultiplyAlpha)\r\n\t\t\t\t\t\t\t? premultiplyTint(element._tintRGB, alpha)\r\n\t\t\t\t\t\t\t: element._tintRGB + (alpha * 255 << 24);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (settings.BLEND_ADD_UNITY && element.blendAddUnity) {\r\n\t\t\t\t\t\tlightRgba = lightRgba & 0xffffff;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst p = aIndex / this.vertexSize;\r\n\t\t\t\t\tconst uvs = element.uvs;\r\n\t\t\t\t\tconst indices = element.indices;\r\n\t\t\t\t\tconst vertexData = element.vertexData;\r\n\t\t\t\t\tlet textureId = element._texture.baseTexture._batchLocation;\r\n\r\n\t\t\t\t\tfor (let i = 0; i < vertexData.length; i += 2)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tfloat32View[aIndex++] = vertexData[i];\r\n\t\t\t\t\t\tfloat32View[aIndex++] = vertexData[i + 1];\r\n\t\t\t\t\t\tfloat32View[aIndex++] = uvs[i];\r\n\t\t\t\t\t\tfloat32View[aIndex++] = uvs[i + 1];\r\n\t\t\t\t\t\tuint32View[aIndex++] = lightRgba;\r\n\t\t\t\t\t\tuint32View[aIndex++] = darkRgba;\r\n\t\t\t\t\t\tfloat32View[aIndex++] = textureId;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i = 0; i < indices.length; i++)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tindexBuffer[iIndex++] = p + indices[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/**\r\n\t\t\t\t * I override this method because of special alpha case that can be batched and work with any masks\r\n\t\t\t\t * @param texArray\r\n\t\t\t\t * @param start\r\n\t\t\t\t * @param finish\r\n\t\t\t\t */\r\n\t\t\t\tbuildDrawCalls(texArray: PIXI.BatchTextureArray, start: number, finish: number): void\r\n\t\t\t\t{\r\n\t\t\t\t\tconst thisAny = this as any;\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\t_bufferedElements: elements,\r\n\t\t\t\t\t\t_attributeBuffer,\r\n\t\t\t\t\t\t_indexBuffer,\r\n\t\t\t\t\t\tvertexSize,\r\n\t\t\t\t\t} = thisAny;\r\n\t\t\t\t\tconst drawCalls = PIXI.AbstractBatchRenderer._drawCallPool;\r\n\r\n\t\t\t\t\tlet dcIndex = thisAny._dcIndex;\r\n\t\t\t\t\tlet aIndex = thisAny._aIndex;\r\n\t\t\t\t\tlet iIndex = thisAny._iIndex;\r\n\r\n\t\t\t\t\tlet drawCall = drawCalls[dcIndex] as any;\r\n\r\n\t\t\t\t\tdrawCall.start = thisAny._iIndex;\r\n\t\t\t\t\tdrawCall.texArray = texArray;\r\n\r\n\t\t\t\t\tfor (let i = start; i < finish; ++i)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tconst sprite = elements[i];\r\n\t\t\t\t\t\tconst tex = sprite._texture.baseTexture;\r\n\t\t\t\t\t\tlet spriteBlendMode = premultiplyBlendMode[\r\n\t\t\t\t\t\t\ttex.alphaMode ? 1 : 0][sprite.blendMode];\r\n\r\n\t\t\t\t\t\tif (settings.BLEND_ADD_UNITY) {\r\n\t\t\t\t\t\t\tsprite.blendAddUnity = (spriteBlendMode === BLEND_MODES.ADD && tex.alphaMode);\r\n\t\t\t\t\t\t\tif (sprite.blendAddUnity) {\r\n\t\t\t\t\t\t\t\tspriteBlendMode = BLEND_MODES.NORMAL;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\telements[i] = null;\r\n\r\n\t\t\t\t\t\tif (start < i && drawCall.blend !== spriteBlendMode)\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tdrawCall.size = iIndex - drawCall.start;\r\n\t\t\t\t\t\t\tstart = i;\r\n\t\t\t\t\t\t\tdrawCall = drawCalls[++dcIndex];\r\n\t\t\t\t\t\t\tdrawCall.texArray = texArray;\r\n\t\t\t\t\t\t\tdrawCall.start = iIndex;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tthis.packInterleavedGeometry(sprite, _attributeBuffer, _indexBuffer, aIndex, iIndex);\r\n\t\t\t\t\t\taIndex += sprite.vertexData.length / 2 * vertexSize;\r\n\t\t\t\t\t\tiIndex += sprite.indices.length;\r\n\r\n\t\t\t\t\t\tdrawCall.blend = spriteBlendMode;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (start < finish)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdrawCall.size = iIndex - drawCall.start;\r\n\t\t\t\t\t\t++dcIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthisAny._dcIndex = dcIndex;\r\n\t\t\t\t\tthisAny._aIndex = aIndex;\r\n\t\t\t\t\tthisAny._iIndex = iIndex;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tPIXI.Renderer.registerPlugin('batchHeaven', DarkLightPluginFactory.create({}));\r\n}\r\n","namespace pixi_heaven.webgl {\r\n\tinterface ILoopDescriptor {\r\n\t\tloopLabel: string\r\n\t\tinTex: string\r\n\t\tinCoord: string\r\n\t\toutColor: string\r\n\t}\r\n\r\n\timport Program = PIXI.Program;\r\n\timport UniformGroup = PIXI.UniformGroup;\r\n\timport Shader = PIXI.Shader;\r\n\timport Matrix = PIXI.Matrix;\r\n\r\n\texport class LoopShaderGenerator {\r\n\t\tprogramCache: {[key: number]: Program} = {};\r\n\t\tdefaultGroupCache: {[key: number]: UniformGroup} = {};\r\n\r\n\t\tconstructor(public vertexSrc: string, public fragTemplate: string, public loops: Array<ILoopDescriptor>) {\r\n\t\t\tif (fragTemplate.indexOf('%count%') < 0) {\r\n\t\t\t\tthrow new Error('Fragment template must contain \"%count%\".');\r\n\t\t\t}\r\n\t\t\tfor (let i=0;i<loops.length;i++) {\r\n\t\t\t\tif (fragTemplate.indexOf(loops[i].loopLabel) < 0) {\r\n\t\t\t\t\tthrow new Error(`Fragment template must contain \"${loops[i].loopLabel}\".`);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tgenerateShader(maxTextures: number): Shader {\r\n\t\t\tif (!this.programCache[maxTextures]) {\r\n\t\t\t\tconst sampleValues = new Int32Array(maxTextures);\r\n\t\t\t\tconst { loops } = this;\r\n\r\n\t\t\t\tfor (let i = 0; i < maxTextures; i++) {\r\n\t\t\t\t\tsampleValues[i] = i;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.defaultGroupCache[maxTextures] = new UniformGroup({uSamplers: sampleValues}, true);\r\n\r\n\t\t\t\tlet fragmentSrc = this.fragTemplate;\r\n\r\n\t\t\t\tfor (let i=0;i<loops.length;i++) {\r\n\t\t\t\t\tfragmentSrc = fragmentSrc.replace(/%count%/gi, `${maxTextures}`);\r\n\t\t\t\t\tfragmentSrc = fragmentSrc.replace(new RegExp(loops[i].loopLabel, 'gi'), this.generateSampleSrc(maxTextures, loops[i]));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.programCache[maxTextures] = new Program(this.vertexSrc, fragmentSrc);\r\n\t\t\t}\r\n\r\n\t\t\t// TODO: move this to generator parameters\r\n\t\t\tconst uniforms = {\r\n\t\t\t\ttint: new Float32Array([1, 1, 1, 1]),\r\n\t\t\t\ttranslationMatrix: new Matrix(),\r\n\t\t\t\tdefault: this.defaultGroupCache[maxTextures],\r\n\t\t\t};\r\n\r\n\t\t\treturn new Shader(this.programCache[maxTextures], uniforms);\r\n\t\t}\r\n\r\n\t\tgenerateSampleSrc(maxTextures: number, loop: ILoopDescriptor): string {\r\n\t\t\tlet src = '';\r\n\r\n\t\t\tsrc += '\\n';\r\n\t\t\tsrc += '\\n';\r\n\r\n\t\t\tfor (let i = 0; i < maxTextures; i++) {\r\n\t\t\t\tif (i > 0) {\r\n\t\t\t\t\tsrc += '\\nelse ';\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (i < maxTextures - 1) {\r\n\t\t\t\t\tsrc += `if(${loop.inTex} < ${i}.5)`;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tsrc += '\\n{';\r\n\t\t\t\tsrc += `\\n\\t${loop.outColor} = texture2D(uSamplers[${i}], ${loop.inCoord});`;\r\n\t\t\t\tsrc += '\\n}';\r\n\t\t\t}\r\n\r\n\t\t\tsrc += '\\n';\r\n\t\t\tsrc += '\\n';\r\n\r\n\t\t\treturn src;\r\n\t\t}\r\n\t}\r\n}","namespace pixi_heaven.webgl {\r\n\timport TYPES = PIXI.TYPES;\r\n\timport BaseTexture = PIXI.BaseTexture;\r\n\timport premultiplyTint = PIXI.utils.premultiplyTint;\r\n\timport AbstractBatchRenderer = PIXI.AbstractBatchRenderer;\r\n\r\n\tconst WHITE = PIXI.Texture.WHITE.baseTexture;\r\n\r\n\tconst shaderVert =\r\n\t\t`precision highp float;\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute vec4 aLight, aDark;\r\nattribute float aTextureId;\r\nattribute vec2 aMaskCoord;\r\nattribute vec4 aMaskClamp;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 translationMatrix;\r\nuniform vec4 tint;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vLight, vDark;\r\nvarying float vTextureId;\r\nvarying vec2 vMaskCoord;\r\nvarying vec4 vMaskClamp;\r\n\r\nvoid main(void){\r\ngl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n\r\nvTextureCoord = aTextureCoord;\r\nvTextureId = aTextureId;\r\nvLight = aLight * tint;\r\nvDark = vec4(aDark.rgb * tint.rgb, aDark.a);\r\nvMaskCoord = aMaskCoord;\r\nvMaskClamp = aMaskClamp;\r\n}\r\n`;\r\n\tconst shaderFrag = `\r\nvarying vec2 vTextureCoord;\r\nvarying vec2 vMaskCoord;\r\nvarying vec4 vMaskClamp;\r\nvarying vec4 vLight, vDark;\r\nvarying float vTextureId;\r\nuniform sampler2D uSamplers[%count%];\r\n\r\nvoid main(void) {\r\nvec4 texColor, maskColor, fragColor;\r\n\r\nfloat maskBits = floor((vTextureId + 0.5) / 64.0);\r\nfloat textureId = floor(0.5 + vTextureId - maskBits * 64.0);\r\nfloat maskId = floor((maskBits + 0.5) / 16.0);\r\nmaskBits = maskBits - maskId * 16.0;\r\n\r\nfloat clipEnable = step(0.5, maskBits);\r\n\r\nfloat clip = step(3.5,\r\n    step(vMaskClamp.x, vMaskCoord.x) +\r\n    step(vMaskClamp.y, vMaskCoord.y) +\r\n    step(vMaskCoord.x, vMaskClamp.z) +\r\n    step(vMaskCoord.y, vMaskClamp.w));\r\n%loopTex%\r\n%loopMask%\r\nfragColor.a = texColor.a * vLight.a;\r\nfragColor.rgb = ((texColor.a - 1.0) * vDark.a + 1.0 - texColor.rgb) * vDark.rgb + texColor.rgb * vLight.rgb;\r\ngl_FragColor = fragColor * maskColor.r * (clipEnable * clip + 1.0 - clipEnable);\r\n}`;\r\n\tconst tempArray = new Float32Array([0, 0, 0, 0]);\r\n\r\n\texport class MaskedGeometry extends PIXI.Geometry {\r\n\t\t_buffer: PIXI.Buffer;\r\n\t\t_indexBuffer: PIXI.Buffer;\r\n\r\n\t\tconstructor(_static = false) {\r\n\t\t\tsuper();\r\n\r\n\t\t\tthis._buffer = new PIXI.Buffer(null, _static, false);\r\n\r\n\t\t\tthis._indexBuffer = new PIXI.Buffer(null, _static, true);\r\n\r\n\t\t\tthis.addAttribute('aVertexPosition', this._buffer, 2, false, TYPES.FLOAT)\r\n\t\t\t\t.addAttribute('aTextureCoord', this._buffer, 2, false, TYPES.FLOAT)\r\n\t\t\t\t.addAttribute('aLight', this._buffer, 4, true, TYPES.UNSIGNED_BYTE)\r\n\t\t\t\t.addAttribute('aDark', this._buffer, 4, true, TYPES.UNSIGNED_BYTE)\r\n\t\t\t\t.addAttribute('aTextureId', this._buffer, 1, true, TYPES.FLOAT)\r\n\t\t\t\t.addAttribute('aMaskCoord', this._buffer, 2, false, TYPES.FLOAT)\r\n\t\t\t\t.addAttribute('aMaskClamp', this._buffer, 4, false, TYPES.FLOAT)\r\n\t\t\t\t.addIndex(this._indexBuffer);\r\n\t\t}\r\n\t}\r\n\r\n\tconst elemTex: Array<BaseTexture> = [null, null];\r\n\r\n\texport class MaskedPluginFactory {\r\n\t\tstatic MAX_TEXTURES = 8;\r\n\r\n\t\tstatic create(options: any): any {\r\n\t\t\tconst {vertex, fragment, vertexSize, geometryClass} = (Object as any).assign({\r\n\t\t\t\tvertex: shaderVert,\r\n\t\t\t\tfragment: shaderFrag,\r\n\t\t\t\tgeometryClass: MaskedGeometry,\r\n\t\t\t\tvertexSize: 13,\r\n\t\t\t}, options);\r\n\r\n\t\t\treturn class BatchPlugin extends AbstractBatchRenderer {\r\n\t\t\t\tconstructor(renderer: PIXI.Renderer) {\r\n\t\t\t\t\tsuper(renderer);\r\n\r\n\t\t\t\t\tthis.shaderGenerator = new LoopShaderGenerator(vertex, fragment,\r\n\t\t\t\t\t\t[{\r\n\t\t\t\t\t\t\tloopLabel: '%loopTex%',\r\n\t\t\t\t\t\t\tinCoord: 'vTextureCoord',\r\n\t\t\t\t\t\t\toutColor: 'texColor',\r\n\t\t\t\t\t\t\tinTex: 'textureId',\r\n\t\t\t\t\t\t}, {\r\n\t\t\t\t\t\t\tloopLabel: '%loopMask%',\r\n\t\t\t\t\t\t\tinCoord: 'vMaskCoord',\r\n\t\t\t\t\t\t\toutColor: 'maskColor',\r\n\t\t\t\t\t\t\tinTex: 'maskId',\r\n\t\t\t\t\t\t}]);\r\n\t\t\t\t\tthis.geometryClass = geometryClass;\r\n\t\t\t\t\tthis.vertexSize = vertexSize;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvertexSize: number;\r\n\r\n\t\t\t\tcontextChange(): void {\r\n\t\t\t\t\tconst thisAny = this as any;\r\n\t\t\t\t\tconst batchMAX_TEXTURES = thisAny.renderer.plugins['batch'].MAX_TEXTURES * 2;\r\n\r\n\t\t\t\t\tthisAny.MAX_TEXTURES = Math.max(2, Math.min(MaskedPluginFactory.MAX_TEXTURES, batchMAX_TEXTURES));\r\n\t\t\t\t\tthis._shader = thisAny.shaderGenerator.generateShader(this.MAX_TEXTURES);\r\n\r\n\t\t\t\t\t// we use the second shader as the first one depending on your browser\r\n\t\t\t\t\t// may omit aTextureId as it is not used by the shader so is optimized out.\r\n\t\t\t\t\tfor (let i = 0; i < thisAny._packedGeometryPoolSize; i++) {\r\n\t\t\t\t\t\t/* eslint-disable max-len */\r\n\t\t\t\t\t\tthisAny._packedGeometries[i] = new (this.geometryClass)();\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tthis.initFlushBuffers();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbuildTexturesAndDrawCalls(): void {\r\n\t\t\t\t\tconst textures: Array<PIXI.BaseTexture> = (this as any)._bufferedTextures;\r\n\t\t\t\t\tconst elements: Array<any> = (this as any)._bufferedElements;\r\n\t\t\t\t\tconst _bufferSize: number = (this as any)._bufferSize;\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tMAX_TEXTURES\r\n\t\t\t\t\t} = this;\r\n\t\t\t\t\tconst textureArrays = AbstractBatchRenderer._textureArrayPool;\r\n\t\t\t\t\tconst batch = this.renderer.batch;\r\n\t\t\t\t\tconst boundTextures: BaseTexture[] = (this as any)._tempBoundTextures;\r\n\t\t\t\t\tconst touch = this.renderer.textureGC.count;\r\n\r\n\t\t\t\t\tlet TICK = ++BaseTexture._globalBatch;\r\n\t\t\t\t\tlet countTexArrays = 0;\r\n\t\t\t\t\tlet texArray = textureArrays[0];\r\n\t\t\t\t\tlet start = 0;\r\n\r\n\t\t\t\t\tbatch.copyBoundTextures(boundTextures, MAX_TEXTURES);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < _bufferSize; ++i) {\r\n\t\t\t\t\t\t// here are my changes, use two textures instead of one\r\n\t\t\t\t\t\t// use WHITE as default mask\r\n\t\t\t\t\t\tconst maskTexNull = elements[i].maskSprite ? elements[i].maskSprite.texture.baseTexture : null;\r\n\t\t\t\t\t\telemTex[0] = maskTexNull && maskTexNull.valid ? maskTexNull : WHITE;\r\n\t\t\t\t\t\telemTex[1] = textures[i];\r\n\t\t\t\t\t\ttextures[i] = null;\r\n\r\n\t\t\t\t\t\tconst cnt = (elemTex[0]._batchEnabled !== TICK ? 1 : 0) +\r\n\t\t\t\t\t\t\t(elemTex[1]._batchEnabled !== TICK ? 1 : 0);\r\n\r\n\t\t\t\t\t\tif (texArray.count + cnt > MAX_TEXTURES) {\r\n\t\t\t\t\t\t\tbatch.boundArray(texArray, boundTextures, TICK, MAX_TEXTURES);\r\n\t\t\t\t\t\t\tthis.buildDrawCalls(texArray, start, i);\r\n\t\t\t\t\t\t\tstart = i;\r\n\t\t\t\t\t\t\ttexArray = textureArrays[++countTexArrays];\r\n\t\t\t\t\t\t\t++TICK;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tfor (let j = 0; j < 2; j++) {\r\n\t\t\t\t\t\t\tconst tex = elemTex[j];\r\n\r\n\t\t\t\t\t\t\tif (tex._batchEnabled !== TICK) {\r\n\t\t\t\t\t\t\t\ttex._batchEnabled = TICK;\r\n\t\t\t\t\t\t\t\t(tex as any).touched = touch;\r\n\t\t\t\t\t\t\t\ttexArray.elements[texArray.count++] = tex;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif (texArray.count > 0) {\r\n\t\t\t\t\t\tbatch.boundArray(texArray, boundTextures, TICK, MAX_TEXTURES);\r\n\t\t\t\t\t\tthis.buildDrawCalls(texArray, start, _bufferSize);\r\n\t\t\t\t\t\t++countTexArrays;\r\n\t\t\t\t\t\t++TICK;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Clean-up\r\n\r\n\t\t\t\t\tfor (let i = 0; i < boundTextures.length; i++) {\r\n\t\t\t\t\t\tboundTextures[i] = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tBaseTexture._globalBatch = TICK;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tpackInterleavedGeometry(element: any, attributeBuffer: PIXI.ViewableBuffer, indexBuffer: Uint16Array, aIndex: number, iIndex: number) {\r\n\t\t\t\t\tconst {\r\n\t\t\t\t\t\tuint32View,\r\n\t\t\t\t\t\tfloat32View,\r\n\t\t\t\t\t} = attributeBuffer;\r\n\r\n\t\t\t\t\tlet lightRgba = -1;\r\n\t\t\t\t\tlet darkRgba = 0;\r\n\r\n\t\t\t\t\tif (element.color) {\r\n\t\t\t\t\t\tlightRgba = element.color.lightRgba;\r\n\t\t\t\t\t\tdarkRgba = element.color.darkRgba;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst alpha = Math.min(element.worldAlpha, 1.0);\r\n\t\t\t\t\t\tlightRgba = (alpha < 1.0\r\n\t\t\t\t\t\t\t&& element._texture.baseTexture.premultiplyAlpha)\r\n\t\t\t\t\t\t\t? premultiplyTint(element._tintRGB, alpha)\r\n\t\t\t\t\t\t\t: element._tintRGB + (alpha * 255 << 24);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst p = aIndex / this.vertexSize;\r\n\t\t\t\t\tconst uvs = element.uvs;\r\n\t\t\t\t\tconst indices = element.indices;\r\n\t\t\t\t\tconst vertexData = element.vertexData;\r\n\t\t\t\t\tlet textureId = element._texture.baseTexture._batchLocation;\r\n\t\t\t\t\tlet maskTex = WHITE;\r\n\r\n\t\t\t\t\tconst mask = element.maskSprite;\r\n\t\t\t\t\tlet clamp: any = tempArray;\r\n\t\t\t\t\tlet maskVertexData = tempArray;\r\n\t\t\t\t\tlet maskBit = 0;\r\n\r\n\t\t\t\t\tif (mask) {\r\n\t\t\t\t\t\t//TODO: exclude from batcher, move it to element render()\r\n\t\t\t\t\t\telement.calculateMaskVertices();\r\n\t\t\t\t\t\tclamp = mask._texture.uvMatrix.uClampFrame;\r\n\t\t\t\t\t\tmaskVertexData = element.maskVertexData;\r\n\t\t\t\t\t\tif (mask.texture.valid) {\r\n\t\t\t\t\t\t\tmaskTex = mask.texture.baseTexture;\r\n\t\t\t\t\t\t\tmaskBit = 1;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i = 0; i < vertexData.length; i += 2) {\r\n\t\t\t\t\t\tfloat32View[aIndex++] = vertexData[i];\r\n\t\t\t\t\t\tfloat32View[aIndex++] = vertexData[i + 1];\r\n\t\t\t\t\t\tfloat32View[aIndex++] = uvs[i];\r\n\t\t\t\t\t\tfloat32View[aIndex++] = uvs[i + 1];\r\n\t\t\t\t\t\tuint32View[aIndex++] = lightRgba;\r\n\t\t\t\t\t\tuint32View[aIndex++] = darkRgba;\r\n\t\t\t\t\t\tfloat32View[aIndex++] = ((maskTex._batchLocation * 16.0 + maskBit) * 64.0) + textureId;\r\n\r\n\t\t\t\t\t\tfloat32View[aIndex++] = maskVertexData[i];\r\n\t\t\t\t\t\tfloat32View[aIndex++] = maskVertexData[i + 1];\r\n\t\t\t\t\t\tfloat32View[aIndex++] = clamp[0];\r\n\t\t\t\t\t\tfloat32View[aIndex++] = clamp[1];\r\n\t\t\t\t\t\tfloat32View[aIndex++] = clamp[2];\r\n\t\t\t\t\t\tfloat32View[aIndex++] = clamp[3];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor (let i = 0; i < indices.length; i++) {\r\n\t\t\t\t\t\tindexBuffer[iIndex++] = p + indices[i];\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\tPIXI.Renderer.registerPlugin('batchMasked', MaskedPluginFactory.create({}));\r\n}\r\n","namespace pixi_heaven {\r\n\timport sign = PIXI.utils.sign;\r\n\r\n\tconst tempMat = new PIXI.Matrix();\r\n\r\n\tconst defIndices = new Uint16Array([0, 1, 2, 0, 2, 3]);\r\n\r\n\texport class Sprite extends PIXI.Sprite implements ITextureAnimationTarget {\r\n\t\tcolor = new ColorTransform();\r\n\t\tmaskSprite: PIXI.Sprite = null;\r\n\t\tmaskVertexData: Float32Array = null;\r\n\t\tuvs: Float32Array = null;\r\n\t\tindices: Uint16Array = defIndices;\r\n\t\tanimState: AnimationState = null;\r\n\t\t// modified by renderer\r\n\t\tblendAddUnity = false;\r\n\r\n\t\tconstructor(texture: PIXI.Texture) {\r\n\t\t\tsuper(texture);\r\n\t\t\tthis.pluginName = 'batchHeaven';\r\n\t\t\tif (this.texture.valid) this._onTextureUpdate();\r\n\t\t}\r\n\r\n\t\tget _tintRGB() {\r\n\t\t\tthis.color.updateTransform();\r\n\t\t\treturn this.color.lightRgba & 0xffffff;\r\n\t\t}\r\n\r\n\t\tset _tintRGB(value: number) {\r\n\t\t\t//nothing\r\n\t\t}\r\n\r\n\t\tget tint() {\r\n\t\t\treturn this.color ? this.color.tintBGR : 0xffffff;\r\n\t\t}\r\n\r\n\t\tset tint(value: number) {\r\n\t\t\tthis.color && (this.color.tintBGR = value);\r\n\t\t}\r\n\r\n\t\t_onTextureUpdate() {\r\n\t\t\tconst thisAny = this as any;\r\n\t\t\tthisAny._textureID = -1;\r\n\t\t\tthisAny._textureTrimmedID = -1;\r\n\r\n\t\t\tconst texture = thisAny._texture;\r\n\t\t\tif (texture.polygon) {\r\n\t\t\t\tthis.uvs = texture.polygon.uvs;\r\n\t\t\t\tthis.indices = texture.polygon.indices;\r\n\t\t\t} else {\r\n\t\t\t\tthis.uvs = texture._uvs.uvsFloat32;\r\n\t\t\t\tthis.indices = defIndices;\r\n\t\t\t}\r\n\r\n\t\t\tthis._cachedTint = 0xFFFFFF;\r\n\t\t\tif (this.color) {\r\n\t\t\t\tthis.color.pma = thisAny._texture.baseTexture.premultipliedAlpha;\r\n\t\t\t}\r\n\r\n\t\t\t// so if _width is 0 then width was not set..\r\n\t\t\tif (thisAny._width) {\r\n\t\t\t\tthis.scale.x = sign(this.scale.x) * thisAny._width / thisAny._texture.orig.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (thisAny._height) {\r\n\t\t\t\tthis.scale.y = sign(this.scale.y) * thisAny._height / thisAny._texture.orig.height;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_render(renderer: PIXI.Renderer) {\r\n\t\t\tthis.color.alpha = this.worldAlpha;\r\n\t\t\tthis.color.updateTransform();\r\n\t\t\tsuper._render(renderer);\r\n\t\t}\r\n\r\n\t\t_calculateBounds() {\r\n\t\t\tconst thisAny = this as any;\r\n\t\t\tconst polygon = (thisAny as any).polygon;\r\n\t\t\tconst trim = thisAny.trim;\r\n\t\t\tconst orig = thisAny.orig;\r\n\r\n\t\t\t// F irst lets check to see if the current texture has a trim..\r\n\t\t\tif (!polygon && (!trim || (trim.width === orig.width && trim.height === orig.height))) {\r\n\t\t\t\t// no trim! lets use the usual calculations..\r\n\t\t\t\tthis.calculateVertices();\r\n\t\t\t\tthis._bounds.addQuad(thisAny.vertexData as any);\r\n\t\t\t} else {\r\n\t\t\t\t// lets calculate a special trimmed bounds...\r\n\t\t\t\tthis.calculateTrimmedVertices();\r\n\t\t\t\tthis._bounds.addQuad(thisAny.vertexTrimmedData as any);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcalculateVertices() {\r\n\t\t\tconst thisAny = this as any;\r\n\t\t\tconst transform = this.transform as any;\r\n\t\t\tconst texture = thisAny._texture as any;\r\n\r\n\t\t\tif (thisAny._transformID === transform._worldID && thisAny._textureID === texture._updateID) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthisAny._transformID = transform._worldID;\r\n\t\t\tthisAny._textureID = texture._updateID;\r\n\r\n\t\t\t// set the vertex data\r\n\r\n\t\t\tconst wt = this.transform.worldTransform;\r\n\t\t\tconst a = wt.a;\r\n\t\t\tconst b = wt.b;\r\n\t\t\tconst c = wt.c;\r\n\t\t\tconst d = wt.d;\r\n\t\t\tconst tx = wt.tx;\r\n\t\t\tconst ty = wt.ty;\r\n\t\t\tconst anchor = thisAny._anchor as any;\r\n\t\t\tconst orig = texture.orig;\r\n\r\n\t\t\tif (texture.polygon) {\r\n\t\t\t\tconst vertices = texture.polygon.vertices;\r\n\t\t\t\tconst n = vertices.length;\r\n\r\n\t\t\t\tif (thisAny.vertexData.length !== n) {\r\n\t\t\t\t\tthisAny.vertexData = new Float32Array(n);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst vertexData = thisAny.vertexData;\r\n\r\n\t\t\t\tconst dx = -(anchor._x * orig.width);\r\n\t\t\t\tconst dy = -(anchor._y * orig.height);\r\n\r\n\t\t\t\tfor (let i = 0; i < n; i += 2) {\r\n\t\t\t\t\tconst x = vertices[i] + dx;\r\n\t\t\t\t\tconst y = vertices[i + 1] + dy;\r\n\r\n\t\t\t\t\tvertexData[i] = x * a + y * c + tx;\r\n\t\t\t\t\tvertexData[i + 1] = x * b + y * d + ty;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst vertexData = thisAny.vertexData;\r\n\t\t\t\tconst trim = texture.trim;\r\n\r\n\t\t\t\tlet w0 = 0;\r\n\t\t\t\tlet w1 = 0;\r\n\t\t\t\tlet h0 = 0;\r\n\t\t\t\tlet h1 = 0;\r\n\r\n\t\t\t\tif (trim) {\r\n\t\t\t\t\t// if the sprite is trimmed and is not a tilingsprite then we need to add the extra\r\n\t\t\t\t\t// space before transforming the sprite coords.\r\n\t\t\t\t\tw1 = trim.x - (anchor._x * orig.width);\r\n\t\t\t\t\tw0 = w1 + trim.width;\r\n\r\n\t\t\t\t\th1 = trim.y - (anchor._y * orig.height);\r\n\t\t\t\t\th0 = h1 + trim.height;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tw1 = -anchor._x * orig.width;\r\n\t\t\t\t\tw0 = w1 + orig.width;\r\n\r\n\t\t\t\t\th1 = -anchor._y * orig.height;\r\n\t\t\t\t\th0 = h1 + orig.height;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// xy\r\n\t\t\t\tvertexData[0] = (a * w1) + (c * h1) + tx;\r\n\t\t\t\tvertexData[1] = (d * h1) + (b * w1) + ty;\r\n\r\n\t\t\t\t// xy\r\n\t\t\t\tvertexData[2] = (a * w0) + (c * h1) + tx;\r\n\t\t\t\tvertexData[3] = (d * h1) + (b * w0) + ty;\r\n\r\n\t\t\t\t// xy\r\n\t\t\t\tvertexData[4] = (a * w0) + (c * h0) + tx;\r\n\t\t\t\tvertexData[5] = (d * h0) + (b * w0) + ty;\r\n\r\n\t\t\t\t// xy\r\n\t\t\t\tvertexData[6] = (a * w1) + (c * h0) + tx;\r\n\t\t\t\tvertexData[7] = (d * h0) + (b * w1) + ty;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcalculateMaskVertices() {\r\n\t\t\t//WE HAVE A MASK\r\n\t\t\tconst maskSprite = this.maskSprite;\r\n\t\t\tconst tex = maskSprite.texture;\r\n\t\t\tconst orig = tex.orig;\r\n\t\t\tconst anchor = maskSprite.anchor;\r\n\r\n\t\t\tif (!tex.valid) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!tex.uvMatrix) {\r\n\t\t\t\t// margin = 0.0, let it bleed a bit, shader code becomes easier\r\n\t\t\t\t// assuming that atlas textures were made with 1-pixel padding\r\n\t\t\t\ttex.uvMatrix = new (PIXI as any).TextureMatrix(tex, 0.0);\r\n\t\t\t}\r\n\t\t\ttex.uvMatrix.update();\r\n\r\n\t\t\t//same operations as in SpriteMaskFilter\r\n\t\t\tmaskSprite.transform.worldTransform.copyTo(tempMat);\r\n\t\t\ttempMat.invert();\r\n\t\t\ttempMat.scale(1.0 / orig.width, 1.0 / orig.height);\r\n\t\t\ttempMat.translate(anchor.x, anchor.y);\r\n\t\t\ttempMat.prepend(tex.uvMatrix.mapCoord);\r\n\r\n\t\t\tconst vertexData = (this as any).vertexData;\r\n\t\t\tconst n = vertexData.length;\r\n\r\n\t\t\tif (!this.maskVertexData || this.maskVertexData.length !== n) {\r\n\t\t\t\tthis.maskVertexData = new Float32Array(n);\r\n\t\t\t}\r\n\r\n\t\t\tconst maskVertexData = this.maskVertexData;\r\n\r\n\t\t\tfor (let i = 0; i < n; i += 2) {\r\n\t\t\t\tmaskVertexData[i] = vertexData[i] * tempMat.a + vertexData[i + 1] * tempMat.c + tempMat.tx;\r\n\t\t\t\tmaskVertexData[i + 1] = vertexData[i] * tempMat.b + vertexData[i + 1] * tempMat.d + tempMat.ty;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdestroy(options?: any) {\r\n\t\t\tif (this.animState) {\r\n\t\t\t\tthis.animState.stop();\r\n\t\t\t\tthis.animState = null;\r\n\t\t\t}\r\n\t\t\tsuper.destroy(options);\r\n\t\t}\r\n\t}\r\n}\r\n","declare module PIXI {\r\n\tinterface Sprite {\r\n\t\tconvertToHeaven(): pixi_heaven.Sprite;\r\n\t}\r\n\r\n\tinterface Mesh {\r\n\t\tconvertToHeaven(): void;\r\n\t}\r\n\r\n\tinterface Graphics {\r\n\t\tconvertToHeaven(): void;\r\n\t}\r\n\r\n\tinterface Container {\r\n\t\tconvertToHeaven(): void;\r\n\r\n\t\tconvertSubtreeToHeaven(): void;\r\n\t}\r\n\r\n\t// TODO: ParticleContainer?\r\n}\r\n\r\nnamespace pixi_heaven {\r\n\t(PIXI as any).Container.prototype.convertToHeaven = function () {\r\n\t};\r\n\r\n\tfunction tintGet() {\r\n\t\treturn this.color.tintBGR;\r\n\t}\r\n\r\n\tfunction tintSet(value: number) {\r\n\t\tthis.color.tintBGR = value;\r\n\t}\r\n\r\n\tfunction tintRGBGet() {\r\n\t\tthis.color.updateTransform();\r\n\t\treturn this.color.lightRgba & 0xffffff;\r\n\t}\r\n\r\n\t(PIXI as any).Sprite.prototype.convertToHeaven = function () {\r\n\t\tif (this.color) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tObject.defineProperty(this, \"tint\", {\r\n\t\t\tget: tintGet,\r\n\t\t\tset: tintSet,\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true\r\n\t\t});\r\n\t\tObject.defineProperty(this, \"_tintRGB\", {\r\n\t\t\tget: tintRGBGet,\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true\r\n\t\t});\r\n\t\tthis._onTextureUpdate = Sprite.prototype._onTextureUpdate;\r\n\t\tthis._render = Sprite.prototype._render;\r\n\t\tthis._calculateBounds = Sprite.prototype._calculateBounds;\r\n\t\tthis.calculateVertices = Sprite.prototype.calculateVertices;\r\n\t\tthis._onTextureUpdate = Sprite.prototype._onTextureUpdate;\r\n\t\tthis.calculateMaskVertices = Sprite.prototype.calculateMaskVertices;\r\n\t\tthis.destroy = Sprite.prototype.destroy;\r\n\t\tthis.color = new ColorTransform();\r\n\t\tthis.pluginName = 'batchHeaven';\r\n\r\n\t\tif (this._texture.valid) {\r\n\t\t\tthis._onTextureUpdate();\r\n\t\t} else {\r\n\t\t\tthis._texture.off('update', this._onTextureUpdate);\r\n\t\t\tthis._texture.on('update', this._onTextureUpdate, this);\r\n\t\t}\r\n\t\treturn this;\r\n\t};\r\n\r\n\t(PIXI as any).Container.prototype.convertSubtreeToHeaven = function () {\r\n\t\tif (this.convertToHeaven) {\r\n\t\t\tthis.convertToHeaven();\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.children.length; i++) {\r\n\t\t\tthis.children[i].convertSubtreeToHeaven();\r\n\t\t}\r\n\t};\r\n}\r\n","///<reference types=\"pixi-spine\"/>\r\nnamespace pixi_heaven {\r\n\r\n\texport class Spine extends PIXI.spine.Spine {\r\n\t\thasSpriteMask: boolean = false;\r\n\t\tcolor = new ColorTransform();\r\n\r\n\t\tconstructor(spineData: PIXI.spine.core.SkeletonData) {\r\n\t\t\tsuper(spineData);\r\n\t\t}\r\n\r\n\t\tnewSprite(tex: PIXI.Texture): any {\r\n\t\t\treturn new SpineSprite(tex, this);\r\n\t\t}\r\n\r\n\t\tnewMesh(texture: PIXI.Texture, vertices?: Float32Array, uvs?: Float32Array, indices?: Uint16Array, drawMode?: number) {\r\n\t\t\treturn new SpineMesh(texture, vertices, uvs, indices, drawMode, this) as any;\r\n\t\t}\r\n\t}\r\n\r\n\texport class SpineMesh extends SimpleMesh {\r\n\t\tregion: PIXI.spine.core.TextureRegion = null;\r\n\t\tspine: Spine;\r\n\r\n\t\tconstructor(texture: PIXI.Texture, vertices?: Float32Array, uvs?: Float32Array, indices?: Uint16Array, drawMode?: number,\r\n\t\t            spine: Spine = null) {\r\n\t\t\tsuper(texture, vertices, uvs, indices, drawMode);\r\n\t\t\tthis.spine = spine;\r\n\t\t}\r\n\r\n\t\t_render(renderer: PIXI.Renderer) {\r\n\t\t\t// part of SimpleMesh\r\n\t\t\tif (this.autoUpdate)\r\n\t\t\t{\r\n\t\t\t\tthis.geometry.getBuffer('aVertexPosition').update();\r\n\t\t\t}\r\n\t\t\tif (this.maskSprite) {\r\n\t\t\t\tthis.spine.hasSpriteMask = true;\r\n\t\t\t}\r\n\t\t\tif (this.spine.hasSpriteMask) {\r\n\t\t\t\t(this.material as any).pluginName = 'batchMasked';\r\n\t\t\t\tthis._renderToBatch(renderer);\r\n\t\t\t} else {\r\n\t\t\t\tsuper._renderDefault(renderer);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\texport class SpineSprite extends Sprite {\r\n\t\tregion: PIXI.spine.core.TextureRegion = null;\r\n\t\tspine: Spine;\r\n\r\n\t\tconstructor(tex: PIXI.Texture, spine: Spine) {\r\n\t\t\tsuper(tex);\r\n\t\t\tthis.spine = spine;\r\n\t\t}\r\n\r\n\t\t_render(renderer: PIXI.Renderer) {\r\n\t\t\tif (this.maskSprite) {\r\n\t\t\t\tthis.spine.hasSpriteMask = true;\r\n\t\t\t}\r\n\t\t\tif (this.spine.hasSpriteMask) {\r\n\t\t\t\tthis.pluginName = 'batchMasked';\r\n\t\t\t}\r\n\t\t\tsuper._render(renderer);\r\n\t\t}\r\n\t}\r\n}\r\n"]}