{"version":3,"file":"pixi-heaven.js","sourceRoot":"","sources":["../src/utils.ts","../src/xporter.ts","../src/base/webgl/BatchBuffer.ts","../src/base/webgl/generateMultiTextureShader.ts","../src/base/webgl/SpriteRenderer.ts","../src/twotint/ColorTransform.ts","../src/twotint/sprites/convert.ts","../src/twotint/sprites/Sprite.ts","../src/twotint/sprites/SpriteHeavenRenderer.ts","../src/twotint/sprites/SpriteModel.ts","../src/twotint/sprites/Text2d.ts"],"names":[],"mappings":"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","sourcesContent":["namespace pixi_heaven.utils {\r\n\texport function createIndicesForQuads(size: number) {\r\n\t\t// the total number of indices in our array, there are 6 points per quad.\r\n\r\n\t\tconst totalIndices = size * 6;\r\n\r\n\t\tconst indices = new Uint16Array(totalIndices);\r\n\r\n\t\t// fill the indices with the quads to draw\r\n\t\tfor (let i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\r\n\t\t\tindices[i + 0] = j + 0;\r\n\t\t\tindices[i + 1] = j + 1;\r\n\t\t\tindices[i + 2] = j + 2;\r\n\t\t\tindices[i + 3] = j + 0;\r\n\t\t\tindices[i + 4] = j + 2;\r\n\t\t\tindices[i + 5] = j + 3;\r\n\t\t}\r\n\r\n\t\treturn indices;\r\n\t}\r\n\r\n\t//bit twiddle is here\r\n\r\n\texport function isPow2(v: number): boolean {\r\n\t\treturn !(v & (v - 1)) && (!!v);\r\n\t}\r\n\r\n\texport function nextPow2(v: number): number {\r\n\t\tv += +(v === 0);\r\n\t\t--v;\r\n\t\tv |= v >>> 1;\r\n\t\tv |= v >>> 2;\r\n\t\tv |= v >>> 4;\r\n\t\tv |= v >>> 8;\r\n\t\tv |= v >>> 16;\r\n\t\treturn v + 1;\r\n\t}\r\n\r\n\texport function log2(v: number) {\r\n\t\tlet r: number, shift: number;\r\n\t\tr = +(v > 0xFFFF) << 4;\r\n\t\tv >>>= r;\r\n\t\tshift = +(v > 0xFF  ) << 3;\r\n\t\tv >>>= shift;\r\n\t\tr |= shift;\r\n\t\tshift = +(v > 0xF   ) << 2;\r\n\t\tv >>>= shift;\r\n\t\tr |= shift;\r\n\t\tshift = +(v > 0x3   ) << 1;\r\n\t\tv >>>= shift;\r\n\t\tr |= shift;\r\n\t\treturn r | (v >> 1);\r\n\t}\r\n}\r\n","///<reference types=\"pixi.js\"/>\r\n(PIXI as any).heaven = pixi_heaven;\r\n","namespace pixi_heaven.webgl {\r\n\texport class BatchBuffer {\r\n\t\tvertices: ArrayBuffer;\r\n\t\tfloat32View: Float32Array;\r\n\t\tuint32View: Uint32Array;\r\n\r\n\r\n\t\tconstructor(size: number) {\r\n\t\t\tthis.vertices = new ArrayBuffer(size);\r\n\r\n\t\t\t/**\r\n\t\t\t * View on the vertices as a Float32Array for positions\r\n\t\t\t *\r\n\t\t\t * @member {Float32Array}\r\n\t\t\t */\r\n\t\t\tthis.float32View = new Float32Array(this.vertices);\r\n\r\n\t\t\t/**\r\n\t\t\t * View on the vertices as a Uint32Array for uvs\r\n\t\t\t *\r\n\t\t\t * @member {Float32Array}\r\n\t\t\t */\r\n\t\t\tthis.uint32View = new Uint32Array(this.vertices);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Destroys the buffer.\r\n\t\t *\r\n\t\t */\r\n\t\tdestroy() {\r\n\t\t\tthis.vertices = null;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven.webgl {\r\n\texport function generateMultiTextureShader(vertexSrc: string, fragmentSrc: string, gl: WebGLRenderingContext, maxTextures: number) {\r\n\t\tfragmentSrc = fragmentSrc.replace(/%count%/gi, maxTextures + '');\r\n\t\tfragmentSrc = fragmentSrc.replace(/%forloop%/gi, generateSampleSrc(maxTextures));\r\n\r\n\t\tconst shader = new PIXI.Shader(gl, vertexSrc, fragmentSrc);\r\n\r\n\t\tconst sampleValues = new Int32Array(maxTextures);\r\n\r\n\t\tfor (let i = 0; i < maxTextures; i++) {\r\n\t\t\tsampleValues[i] = i;\r\n\t\t}\r\n\r\n\t\tshader.bind();\r\n\t\tshader.uniforms.uSamplers = sampleValues;\r\n\r\n\t\treturn shader;\r\n\t}\r\n\r\n\tfunction generateSampleSrc(maxTextures: number) {\r\n\t\tlet src = '';\r\n\r\n\t\tsrc += '\\n';\r\n\t\tsrc += '\\n';\r\n\r\n\t\tfor (let i = 0; i < maxTextures; i++) {\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tsrc += '\\nelse ';\r\n\t\t\t}\r\n\r\n\t\t\tif (i < maxTextures - 1) {\r\n\t\t\t\tsrc += `if(textureId == ${i}.0)`;\r\n\t\t\t}\r\n\r\n\t\t\tsrc += '\\n{';\r\n\t\t\tsrc += `\\n\\ttexColor = texture2D(uSamplers[${i}], texCoord);`;\r\n\t\t\tsrc += '\\n}';\r\n\t\t}\r\n\r\n\t\tsrc += '\\n';\r\n\t\tsrc += '\\n';\r\n\r\n\t\treturn src;\r\n\t}\r\n}\r\n","declare module PIXI {\r\n\texport interface ObjectRenderer {\r\n\t\trenderer: WebGLRenderer;\r\n\t}\r\n\r\n\texport interface BaseTexture {\r\n\t\t_virtalBoundId: number;\r\n\t}\r\n}\r\n\r\nnamespace pixi_heaven.webgl {\r\n\timport BaseTexture = PIXI.BaseTexture;\r\n\timport ObjectRenderer = PIXI.ObjectRenderer;\r\n\timport settings = PIXI.settings;\r\n\timport GLBuffer = PIXI.glCore.GLBuffer;\r\n\timport VertexArrayObject = PIXI.glCore.VertexArrayObject;\r\n\r\n\timport WebGLRenderer = PIXI.WebGLRenderer;\r\n\timport Sprite = PIXI.Sprite;\r\n\r\n\timport premultiplyBlendMode = PIXI.utils.premultiplyBlendMode;\r\n\r\n\tlet TICK = 0;\r\n\r\n\texport class BatchGroup {\r\n\t\ttextures: Array<BaseTexture> = [];\r\n\t\ttextureCount = 0;\r\n\t\tids: Array<Number> = [];\r\n\t\tsize = 0;\r\n\t\tstart = 0;\r\n\t\tblend = PIXI.BLEND_MODES.NORMAL;\r\n\t\tuniforms: any = null;\r\n\t}\r\n\r\n\texport abstract class MultiTextureSpriteRenderer extends ObjectRenderer {\r\n\t\tshaderVert = '';\r\n\t\tshaderFrag = '';\r\n\t\tMAX_TEXTURES_LOCAL = 32;\r\n\r\n\t\tabstract createVao(vertexBuffer: GLBuffer): PIXI.glCore.VertexArrayObject;\r\n\r\n\t\tabstract fillVertices(float32View: Float32Array, uint32View: Uint32Array, index: number, sprite: any, textureId: number): void;\r\n\r\n\t\tgetUniforms(spr: PIXI.Sprite): any {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tsyncUniforms(obj: any) {\r\n\t\t\tif (!obj) return;\r\n\t\t\tlet sh = this.shader;\r\n\t\t\tfor (let key in obj) {\r\n\t\t\t\tsh.uniforms[key] = obj[key];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvertSize = 5;\r\n\t\tvertByteSize = this.vertSize * 4;\r\n\t\tsize = settings.SPRITE_BATCH_SIZE;\r\n\t\tbuffers: Array<BatchBuffer>;\r\n\r\n\t\tindices: Uint16Array;\r\n\r\n\t\tshader: PIXI.Shader;\r\n\r\n\t\tcurrentIndex = 0;\r\n\t\tgroups: Array<BatchGroup>;\r\n\t\tsprites: Array<Sprite> = [];\r\n\r\n\t\tindexBuffer: GLBuffer;\r\n\t\tvertexBuffers: Array<GLBuffer> = [];\r\n\t\tvaos: Array<VertexArrayObject> = [];\r\n\t\tvao: VertexArrayObject;\r\n\t\tvaoMax = 2;\r\n\t\tvertexCount = 0;\r\n\r\n\t\tMAX_TEXTURES = 1;\r\n\r\n\t\t/**\r\n\t\t * @param {PIXI.WebGLRenderer} renderer - The renderer this sprite batch works for.\r\n\t\t */\r\n\t\tconstructor(renderer: WebGLRenderer) {\r\n\t\t\tsuper(renderer);\r\n\r\n\t\t\tthis.indices = utils.createIndicesForQuads(this.size);\r\n\r\n\t\t\tthis.groups = [];\r\n\t\t\tfor (let k = 0; k < this.size; k++) {\r\n\t\t\t\tthis.groups[k] = new BatchGroup();\r\n\t\t\t}\r\n\r\n\t\t\tthis.vaoMax = 2;\r\n\t\t\tthis.vertexCount = 0;\r\n\r\n\t\t\tthis.renderer.on('prerender', this.onPrerender, this);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets up the renderer context and necessary buffers.\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\tonContextChange() {\r\n\t\t\tconst gl = this.renderer.gl;\r\n\r\n\t\t\tthis.MAX_TEXTURES = Math.min(this.MAX_TEXTURES_LOCAL, this.renderer.plugins['sprite'].MAX_TEXTURES);\r\n\r\n\t\t\t// generate generateMultiTextureProgram, may be a better move?\r\n\t\t\tthis.shader = generateMultiTextureShader(this.shaderVert, this.shaderFrag, gl, this.MAX_TEXTURES);\r\n\r\n\t\t\tthis.indexBuffer = GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\r\n\r\n\t\t\t// we use the second shader as the first one depending on your browser may omit aTextureId\r\n\t\t\t// as it is not used by the shader so is optimized out.\r\n\r\n\t\t\tthis.renderer.bindVao(null);\r\n\r\n\t\t\tconst attrs = this.shader.attributes;\r\n\r\n\t\t\tfor (let i = 0; i < this.vaoMax; i++) {\r\n\t\t\t\t/* eslint-disable max-len */\r\n\t\t\t\tconst vertexBuffer = this.vertexBuffers[i] = GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\r\n\t\t\t\t/* eslint-enable max-len */\r\n\r\n\t\t\t\t// build the vao object that will render..\r\n\t\t\t\tthis.vaos[i] = this.createVao(vertexBuffer);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.buffers) {\r\n\t\t\t\tthis.buffers = [];\r\n\t\t\t\tfor (let i = 1; i <= utils.nextPow2(this.size); i *= 2) {\r\n\t\t\t\t\tthis.buffers.push(new BatchBuffer(i * 4 * this.vertByteSize));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.vao = this.vaos[0];\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Called before the renderer starts rendering.\r\n\t\t *\r\n\t\t */\r\n\t\tonPrerender() {\r\n\t\t\tthis.vertexCount = 0;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Renders the sprite object.\r\n\t\t *\r\n\t\t * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\r\n\t\t */\r\n\t\trender(sprite: Sprite) {\r\n\t\t\t// TODO set blend modes..\r\n\t\t\t// check texture..\r\n\t\t\tif (this.currentIndex >= this.size) {\r\n\t\t\t\tthis.flush();\r\n\t\t\t}\r\n\r\n\t\t\t// get the uvs for the texture\r\n\r\n\t\t\t// if the uvs have not updated then no point rendering just yet!\r\n\t\t\tif (!(sprite as any)._texture._uvs) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!(sprite as any)._texture.baseTexture) {\r\n\t\t\t\t//WTF, Rpgmaker MV?\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// push a texture.\r\n\t\t\t// increment the batchsize\r\n\t\t\tthis.sprites[this.currentIndex++] = sprite;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Renders the content and empties the current batch.\r\n\t\t *\r\n\t\t */\r\n\t\tflush() {\r\n\t\t\tif (this.currentIndex === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst gl = this.renderer.gl;\r\n\t\t\tconst MAX_TEXTURES = this.MAX_TEXTURES;\r\n\r\n\t\t\tconst np2 = utils.nextPow2(this.currentIndex);\r\n\t\t\tconst log2 = utils.log2(np2);\r\n\t\t\tconst buffer = this.buffers[log2];\r\n\r\n\t\t\tconst sprites = this.sprites;\r\n\t\t\tconst groups = this.groups;\r\n\r\n\t\t\tconst float32View = buffer.float32View;\r\n\t\t\tconst uint32View = buffer.uint32View;\r\n\r\n\t\t\t// const touch = 0;// this.renderer.textureGC.count;\r\n\r\n\t\t\tlet index = 0;\r\n\t\t\tlet nextTexture: any;\r\n\t\t\tlet currentTexture: BaseTexture;\r\n\t\t\tlet currentUniforms: any = null;\r\n\t\t\tlet groupCount = 1;\r\n\t\t\tlet textureCount = 0;\r\n\t\t\tlet currentGroup = groups[0];\r\n\t\t\tlet vertexData;\r\n\t\t\tlet uvs;\r\n\t\t\tlet blendMode = premultiplyBlendMode[\r\n\t\t\t\t(sprites[0] as any)._texture.baseTexture.premultipliedAlpha ? 1 : 0][sprites[0].blendMode];\r\n\r\n\t\t\tcurrentGroup.textureCount = 0;\r\n\t\t\tcurrentGroup.start = 0;\r\n\t\t\tcurrentGroup.blend = blendMode;\r\n\r\n\t\t\tTICK++;\r\n\r\n\t\t\tlet i;\r\n\r\n\t\t\tfor (i = 0; i < this.currentIndex; ++i) {\r\n\t\t\t\t// upload the sprite elemetns...\r\n\t\t\t\t// they have all ready been calculated so we just need to push them into the buffer.\r\n\r\n\t\t\t\t// upload the sprite elemetns...\r\n\t\t\t\t// they have all ready been calculated so we just need to push them into the buffer.\r\n\t\t\t\tconst sprite = sprites[i] as any;\r\n\r\n\t\t\t\tnextTexture = sprite._texture.baseTexture;\r\n\r\n\t\t\t\tconst spriteBlendMode = premultiplyBlendMode[Number(nextTexture.premultipliedAlpha)][sprite.blendMode];\r\n\r\n\t\t\t\tif (blendMode !== spriteBlendMode) {\r\n\t\t\t\t\t// finish a group..\r\n\t\t\t\t\tblendMode = spriteBlendMode;\r\n\r\n\t\t\t\t\t// force the batch to break!\r\n\t\t\t\t\tcurrentTexture = null;\r\n\t\t\t\t\ttextureCount = MAX_TEXTURES;\r\n\t\t\t\t\tTICK++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst uniforms = this.getUniforms(sprite);\r\n\t\t\t\tif (currentUniforms !== uniforms) {\r\n\t\t\t\t\tcurrentUniforms = uniforms;\r\n\r\n\t\t\t\t\tcurrentTexture = null;\r\n\t\t\t\t\ttextureCount = MAX_TEXTURES;\r\n\t\t\t\t\tTICK++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (currentTexture !== nextTexture) {\r\n\t\t\t\t\tcurrentTexture = nextTexture;\r\n\r\n\t\t\t\t\tif (nextTexture._enabled !== TICK) {\r\n\t\t\t\t\t\tif (textureCount === MAX_TEXTURES) {\r\n\t\t\t\t\t\t\tTICK++;\r\n\r\n\t\t\t\t\t\t\ttextureCount = 0;\r\n\r\n\t\t\t\t\t\t\tcurrentGroup.size = i - currentGroup.start;\r\n\r\n\t\t\t\t\t\t\tcurrentGroup = groups[groupCount++];\r\n\t\t\t\t\t\t\tcurrentGroup.textureCount = 0;\r\n\t\t\t\t\t\t\tcurrentGroup.blend = blendMode;\r\n\t\t\t\t\t\t\tcurrentGroup.start = i;\r\n\t\t\t\t\t\t\tcurrentGroup.uniforms = currentUniforms;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextTexture._enabled = TICK;\r\n\t\t\t\t\t\tnextTexture._virtalBoundId = textureCount;\r\n\r\n\t\t\t\t\t\tcurrentGroup.textures[currentGroup.textureCount++] = nextTexture;\r\n\t\t\t\t\t\ttextureCount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.fillVertices(float32View, uint32View, index, sprite, nextTexture._virtalBoundId);\r\n\r\n\t\t\t\tindex += this.vertSize * 4;\r\n\t\t\t}\r\n\r\n\t\t\tcurrentGroup.size = i - currentGroup.start;\r\n\r\n\t\t\tif (!settings.CAN_UPLOAD_SAME_BUFFER) {\r\n\t\t\t\t// this is still needed for IOS performance..\r\n\t\t\t\t// it really does not like uploading to the same buffer in a single frame!\r\n\t\t\t\tif (this.vaoMax <= this.vertexCount) {\r\n\t\t\t\t\tthis.vaoMax++;\r\n\r\n\t\t\t\t\tconst attrs = this.shader.attributes;\r\n\r\n\t\t\t\t\t/* eslint-disable max-len */\r\n\t\t\t\t\tconst vertexBuffer = this.vertexBuffers[this.vertexCount] = GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\r\n\t\t\t\t\t/* eslint-enable max-len */\r\n\r\n\t\t\t\t\tthis.vaos[this.vertexCount] = this.createVao(vertexBuffer);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.renderer.bindVao(this.vaos[this.vertexCount]);\r\n\r\n\t\t\t\tthis.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, false);\r\n\r\n\t\t\t\tthis.vertexCount++;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t// lets use the faster option, always use buffer number 0\r\n\t\t\t\tthis.vertexBuffers[this.vertexCount].upload(buffer.vertices, 0, true);\r\n\t\t\t}\r\n\r\n\t\t\tcurrentUniforms = null;\r\n\r\n\t\t\t// / render the groups..\r\n\t\t\tfor (i = 0; i < groupCount; i++) {\r\n\t\t\t\tconst group = groups[i];\r\n\t\t\t\tconst groupTextureCount = group.textureCount;\r\n\r\n\t\t\t\tif (group.uniforms !== currentUniforms) {\r\n\t\t\t\t\tthis.syncUniforms(group.uniforms);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let j = 0; j < groupTextureCount; j++) {\r\n\t\t\t\t\tthis.renderer.bindTexture(group.textures[j], j, true);\r\n\r\n\t\t\t\t\tconst v = this.shader.uniforms.samplerSize;\r\n\t\t\t\t\tif (v) {\r\n\t\t\t\t\t\tv[0] = group.textures[j].realWidth;\r\n\t\t\t\t\t\tv[1] = group.textures[j].realHeight;\r\n\t\t\t\t\t\tthis.shader.uniforms.samplerSize = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// set the blend mode..\r\n\t\t\t\tthis.renderer.state.setBlendMode(group.blend);\r\n\r\n\t\t\t\tgl.drawElements(gl.TRIANGLES, group.size * 6, gl.UNSIGNED_SHORT, group.start * 6 * 2);\r\n\t\t\t}\r\n\r\n\t\t\t// reset elements for the next flush\r\n\t\t\tthis.currentIndex = 0;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts a new sprite batch.\r\n\t\t */\r\n\t\tstart() {\r\n\t\t\tthis.renderer.bindShader(this.shader);\r\n\r\n\t\t\tif (settings.CAN_UPLOAD_SAME_BUFFER) {\r\n\t\t\t\t// bind buffer #0, we don't need others\r\n\t\t\t\tthis.renderer.bindVao(this.vaos[this.vertexCount]);\r\n\r\n\t\t\t\tthis.vertexBuffers[this.vertexCount].bind();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops and flushes the current batch.\r\n\t\t *\r\n\t\t */\r\n\t\tstop() {\r\n\t\t\tthis.flush();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Destroys the SpriteRenderer.\r\n\t\t *\r\n\t\t */\r\n\t\tdestroy() {\r\n\t\t\tfor (let i = 0; i < this.vaoMax; i++) {\r\n\t\t\t\tif (this.vertexBuffers[i]) {\r\n\t\t\t\t\tthis.vertexBuffers[i].destroy();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.vaos[i]) {\r\n\t\t\t\t\tthis.vaos[i].destroy();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.indexBuffer) {\r\n\t\t\t\tthis.indexBuffer.destroy();\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderer.off('prerender', this.onPrerender, this);\r\n\r\n\t\t\tsuper.destroy();\r\n\r\n\t\t\tif (this.shader) {\r\n\t\t\t\tthis.shader.destroy();\r\n\t\t\t\tthis.shader = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis.vertexBuffers = null;\r\n\t\t\tthis.vaos = null;\r\n\t\t\tthis.indexBuffer = null;\r\n\t\t\tthis.indices = null;\r\n\r\n\t\t\tthis.sprites = null;\r\n\r\n\t\t\tfor (let i = 0; i < this.buffers.length; ++i) {\r\n\t\t\t\tthis.buffers[i].destroy();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven {\r\n\tconst whiteRgba = [1.0, 1.0, 1.0, 1.0];\r\n\tconst blackRgba = [0.0, 0.0, 0.0, 1.0];\r\n\r\n\texport class ColorTransform {\r\n\t\tdark = new Float32Array(blackRgba);\r\n\t\tlight = new Float32Array(whiteRgba);\r\n\r\n\t\t_updateID = 0;\r\n\t\t_currentUpdateID = -1;\r\n\r\n\t\tdarkRgba: number = 0;\r\n\t\tlightRgba: number = -1;\r\n\t\thasNoTint: boolean = true;\r\n\r\n\t\tget darkR() {\r\n\t\t\treturn this.dark[0];\r\n\t\t}\r\n\r\n\t\tset darkR(value: number) {\r\n\t\t\tif (this.dark[0] === value) return;\r\n\t\t\tthis.dark[0] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget darkG() {\r\n\t\t\treturn this.dark[1];\r\n\t\t}\r\n\r\n\t\tset darkG(value: number) {\r\n\t\t\tif (this.dark[1] === value) return;\r\n\t\t\tthis.dark[1] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget darkB() {\r\n\t\t\treturn this.dark[2];\r\n\t\t}\r\n\r\n\t\tset darkB(value: number) {\r\n\t\t\tif (this.dark[2] === value) return;\r\n\t\t\tthis.dark[2] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget lightR() {\r\n\t\t\treturn this.light[0];\r\n\t\t}\r\n\r\n\t\tset lightR(value: number) {\r\n\t\t\tif (this.light[0] === value) return;\r\n\t\t\tthis.light[0] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget lightG() {\r\n\t\t\treturn this.light[1];\r\n\t\t}\r\n\r\n\t\tset lightG(value: number) {\r\n\t\t\tif (this.light[1] === value) return;\r\n\t\t\tthis.light[1] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget lightB() {\r\n\t\t\treturn this.light[2];\r\n\t\t}\r\n\r\n\t\tset lightB(value: number) {\r\n\t\t\tif (this.light[2] === value) return;\r\n\t\t\tthis.light[2] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget alpha() {\r\n\t\t\treturn this.light[3];\r\n\t\t}\r\n\r\n\t\tset alpha(value: number) {\r\n\t\t\tif (this.light[3] === value) return;\r\n\t\t\tthis.light[3] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget pma() {\r\n\t\t\treturn this.dark[3] !== 0.0;\r\n\t\t}\r\n\r\n\t\tset pma(value: boolean) {\r\n\t\t\tif ((this.dark[3] !== 0.0) !== value) return;\r\n\t\t\tthis.dark[3] = value ? 1.0 : 0.0;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget tintBGR() {\r\n\t\t\tconst light = this.light;\r\n\t\t\treturn (light[0] << 16) + (light[1] << 8) + (light[2] | 0);\r\n\t\t}\r\n\r\n\t\tset tintBGR(value: number) {\r\n\t\t\tconst light = this.light;\r\n\r\n\t\t\tlight[0] = ((value >> 16) & 0xff) / 255.0;\r\n\t\t\tlight[1] = ((value >> 8) & 0xff) / 255.0;\r\n\t\t\tlight[2] = (value & 0xff) / 255.0;\r\n\t\t}\r\n\r\n\t\tsetLight(R: number, G: number, B: number) {\r\n\t\t\tconst color = this.light;\r\n\r\n\t\t\tif (color[0] === R && color[1] === G && color[2] === B) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcolor[0] = R;\r\n\t\t\tcolor[1] = G;\r\n\t\t\tcolor[2] = B;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tsetDark(R: number, G: number, B: number) {\r\n\t\t\tconst color = this.dark;\r\n\r\n\t\t\tif (color[0] === R && color[1] === G && color[2] === B) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcolor[0] = R;\r\n\t\t\tcolor[1] = G;\r\n\t\t\tcolor[2] = B;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tclear() {\r\n\t\t\tthis.dark[0] = 0.0;\r\n\t\t\tthis.dark[1] = 0.0;\r\n\t\t\tthis.dark[2] = 0.0;\r\n\t\t\tthis.light[0] = 1.0;\r\n\t\t\tthis.light[1] = 1.0;\r\n\t\t\tthis.light[2] = 1.0;\r\n\t\t}\r\n\r\n\t\tinvalidate() {\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tupdateTransformLocal() {\r\n\t\t\tconst dark = this.dark, light = this.light;\r\n\t\t\tconst la = 255 * (1.0 + (light[3] - 1.0) * dark[3]);\r\n\t\t\tthis.hasNoTint = dark[0] === 0.0 && dark[1] === 0.0 && dark[2] === 0.0\r\n\t\t\t\t&& light[0] === 1.0 && light[1] === 1.0 && light[2] === 1.0;\r\n\t\t\tthis.darkRgba = (dark[0] * la | 0) + ((dark[1] * la) << 8)\r\n\t\t\t\t+ ((dark[2] * la) << 16) + ((dark[3] * 255) << 24);\r\n\t\t\tthis.lightRgba = (light[0] * la | 0) + ((light[1] * la) << 8)\r\n\t\t\t\t+ ((light[2] * la) << 16) + ((light[3] * 255) << 24);\r\n\t\t\tthis._currentUpdateID = this._updateID;\r\n\t\t}\r\n\r\n\t\tupdateTransform() {\r\n\t\t\tif (this._currentUpdateID === this._updateID) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.updateTransformLocal();\r\n\t\t}\r\n\t}\r\n}\r\n","declare module PIXI {\r\n\tinterface Sprite {\r\n\t\tconvertToHeaven(): pixi_heaven.Sprite;\r\n\t}\r\n\r\n\tinterface Mesh {\r\n\t\tconvertToHeaven(): void;\r\n\t}\r\n\r\n\tinterface Graphics {\r\n\t\tconvertToHeaven(): void;\r\n\t}\r\n\r\n\tinterface Container {\r\n\t\tconvertToHeaven(): void;\r\n\r\n\t\tconvertSubtreeToHeaven(): void;\r\n\t}\r\n\r\n\t// TODO: ParticleContainer?\r\n}\r\n\r\nnamespace pixi_heaven {\r\n\t(PIXI as any).Container.prototype.convertToHeaven = function () {\r\n\t};\r\n\r\n\tfunction tintGet() {\r\n\t\treturn this.color.tintBGR;\r\n\t}\r\n\r\n\tfunction tintSet(value: number) {\r\n\t\tthis.color.tintBGR = value;\r\n\t}\r\n\r\n\tfunction tintRGBGet() {\r\n\t\tthis.color.updateTransform();\r\n\t\treturn this.color.lightRgba & 0xffffff;\r\n\t}\r\n\r\n\t(PIXI as any).Sprite.prototype.convertToHeaven = function () {\r\n\t\tif (this.color) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tObject.defineProperty(this, \"tint\", {\r\n\t\t\tget: tintGet,\r\n\t\t\tset: tintSet,\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true\r\n\t\t});\r\n\t\tObject.defineProperty(this, \"_tintRGB\", {\r\n\t\t\tget: tintRGBGet,\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true\r\n\t\t});\r\n\t\tthis._onTextureUpdate = Sprite.prototype._onTextureUpdate;\r\n\t\tthis.updateTransform = Sprite.prototype.updateTransform;\r\n\t\tthis.color = new ColorTransform();\r\n\t\tthis.pluginName = 'spriteHeaven';\r\n\t\treturn this;\r\n\t};\r\n\r\n\t(PIXI as any).Container.prototype.convertSubtreeToHeaven = function () {\r\n\t\tif (this.convertToHeaven) {\r\n\t\t\tthis.convertToHeaven();\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.children.length; i++) {\r\n\t\t\tthis.children[i].convertSubtreeToHeaven();\r\n\t\t}\r\n\t};\r\n}\r\n","namespace pixi_heaven {\r\n\timport sign = PIXI.utils.sign;\r\n\r\n\texport class Sprite extends PIXI.Sprite {\r\n\t\tcolor = new ColorTransform();\r\n\r\n\t\tconstructor(texture: PIXI.Texture) {\r\n\t\t\tsuper(texture);\r\n\t\t\tthis.pluginName = 'spriteHeaven';\r\n\t\t}\r\n\r\n\t\tget _tintRGB() {\r\n\t\t\tthis.color.updateTransform();\r\n\t\t\treturn this.color.lightRgba & 0xffffff;\r\n\t\t}\r\n\r\n\t\tset _tintRGB(value: number) {\r\n\t\t\t//nothing\r\n\t\t}\r\n\r\n\t\tget tint() {\r\n\t\t\treturn this.color ? this.color.tintBGR : 0xffffff;\r\n\t\t}\r\n\r\n\t\tset tint(value: number) {\r\n\t\t\tthis.color && (this.color.tintBGR = value);\r\n\t\t}\r\n\r\n\t\tupdateTransform() {\r\n\t\t\tthis._boundsID++;\r\n\r\n\t\t\tthis.transform.updateTransform(this.parent.transform);\r\n\r\n\t\t\t// TODO: check render flags, how to process stuff here\r\n\t\t\tthis.worldAlpha = this.alpha * this.parent.worldAlpha;\r\n\t\t\tif (this.color) {\r\n\t\t\t\tthis.color.alpha = this.worldAlpha;\r\n\t\t\t\tthis.color.updateTransform();\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0, j = this.children.length; i < j; ++i)\r\n\t\t\t{\r\n\t\t\t\tconst child = this.children[i];\r\n\r\n\t\t\t\tif (child.visible)\r\n\t\t\t\t{\r\n\t\t\t\t\tchild.updateTransform();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_onTextureUpdate() {\r\n\t\t\tthis._textureID = -1;\r\n\t\t\tthis._textureTrimmedID = -1;\r\n\t\t\tthis.cachedTint = 0xFFFFFF;\r\n\t\t\tthis.color.pma = this._texture.baseTexture.premultipliedAlpha;\r\n\r\n\t\t\t// so if _width is 0 then width was not set..\r\n\t\t\tif (this._width) {\r\n\t\t\t\tthis.scale.x = sign(this.scale.x) * this._width / this._texture.orig.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._height) {\r\n\t\t\t\tthis.scale.y = sign(this.scale.y) * this._height / this._texture.orig.height;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven {\r\n\timport MultiTextureSpriteRenderer = pixi_heaven.webgl.MultiTextureSpriteRenderer;\r\n\r\n\tclass SpriteHeavenRenderer extends MultiTextureSpriteRenderer {\r\n\t\tshaderVert =\r\n\t\t\t`precision highp float;\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute vec4 aLight, aDark;\r\nattribute float aTextureId;\r\n\r\nuniform mat3 projectionMatrix;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vLight, vDark;\r\nvarying float vTextureId;\r\n\r\nvoid main(void){\r\n    gl_Position.xyw = projectionMatrix * vec3(aVertexPosition, 1.0);\r\n    gl_Position.z = 0.0;\r\n    \r\n    vTextureCoord = aTextureCoord;\r\n    vTextureId = aTextureId;\r\n    vLight = aLight;\r\n    vDark = aDark;\r\n}\r\n`;\r\n\t\tshaderFrag = `\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vLight, vDark;\r\nvarying float vTextureId;\r\nuniform sampler2D uSamplers[%count%];\r\n\r\nvoid main(void) {\r\nvec4 texColor;\r\nvec2 texCoord = vTextureCoord;\r\nfloat textureId = floor(vTextureId+0.5);\r\n%forloop%\r\ngl_FragColor.a = texColor.a * vLight.a;\r\ngl_FragColor.rgb = ((texColor.a - 1.0) * vDark.a + 1.0 - texColor.rgb) * vDark.rgb + texColor.rgb * vLight.rgb;\r\n}`;\r\n\r\n\t\tcreateVao(vertexBuffer: PIXI.glCore.GLBuffer) {\r\n\t\t\tconst attrs = this.shader.attributes;\r\n\t\t\tthis.vertSize = attrs.aTextureId ? 6 : 5;\r\n\t\t\tthis.vertByteSize = this.vertSize * 4;\r\n\r\n\r\n\t\t\tconst gl = this.renderer.gl;\r\n\t\t\tconst vao = this.renderer.createVao()\r\n\t\t\t\t.addIndex(this.indexBuffer)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 2 * 4)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aLight, gl.UNSIGNED_BYTE, true, this.vertByteSize, 3 * 4)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aDark, gl.UNSIGNED_BYTE, true, this.vertByteSize, 4 * 4);\r\n\r\n\t\t\tif (attrs.aTextureId) {\r\n\t\t\t\tvao.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 5 * 4);\r\n\t\t\t}\r\n\r\n\t\t\treturn vao;\r\n\t\t}\r\n\r\n\t\tfillVertices(float32View: Float32Array, uint32View: Uint32Array, index: number, sprite: any, textureId: number) {\r\n\t\t\t//first, fill the coordinates!\r\n\r\n\t\t\tconst vertexData = sprite.vertexData;\r\n\t\t\tconst uvs = sprite._texture._uvs.uvsUint32;\r\n\r\n\t\t\tconst n = vertexData.length / 2;\r\n\r\n\t\t\tconst lightRgba = sprite.color.lightRgba;\r\n\t\t\tconst darkRgba = sprite.color.darkRgba;\r\n\t\t\tconst stride = this.vertSize;\r\n\r\n\t\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\t\tfloat32View[index] = vertexData[i * 2];\r\n\t\t\t\tfloat32View[index + 1] = vertexData[i * 2 + 1];\r\n\t\t\t\tuint32View[index + 2] = uvs[i];\r\n\t\t\t\tuint32View[index + 3] = lightRgba;\r\n\t\t\t\tuint32View[index + 4] = darkRgba;\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\r\n\t\t\tif (stride === 6) {\r\n\t\t\t\tfor (let i = 0; i < n; i++) {\r\n\t\t\t\t\tfloat32View[index + 5] = textureId;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tPIXI.WebGLRenderer.registerPlugin('spriteHeaven', SpriteHeavenRenderer);\r\n}","namespace pixi_heaven {\r\n\texport class SpriteModel {\r\n\r\n\t}\r\n}","namespace pixi_heaven {\r\n\t// export class Text2d extends PIXI.Text {\r\n     //    constructor(text?: string, style?: PIXI.TextStyle, canvas?: HTMLCanvasElement) {\r\n     //        super(text, style, canvas);\r\n     //        this.proj = new Projection2d(this.transform);\r\n     //        this.pluginName = 'sprite2d';\r\n     //        this.vertexData = new Float32Array(12);\r\n     //    }\r\n\t//\r\n     //    proj: Projection2d;\r\n\t//\r\n     //    get worldTransform() {\r\n\t//         return this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\r\n     //    }\r\n\t// }\r\n\t//\r\n\t// Text2d.prototype.calculateVertices = Sprite2d.prototype.calculateVertices;\r\n\t// (Text2d.prototype as any).calculateTrimmedVertices = Sprite2d.prototype.calculateTrimmedVertices;\r\n\t// (Text2d.prototype as any)._calculateBounds = Sprite2d.prototype._calculateBounds;\r\n}\r\n"]}